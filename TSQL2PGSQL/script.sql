/*
Deployment script for SAM5DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SAM5DB"
:setvar DefaultFilePrefix "SAM5DB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Cyrillic_General_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
print '$$$-predeployment-start-do-not-change-this-line-$$$'



print '$$$-predeployment-end-do-not-change-this-line-$$$'
GO

GO
PRINT N'Creating [acc]...';


GO
CREATE SCHEMA [acc]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [biz]...';


GO
CREATE SCHEMA [biz]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [core]...';


GO
CREATE SCHEMA [core]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [dic]...';


GO
CREATE SCHEMA [dic]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [fs]...';


GO
CREATE SCHEMA [fs]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [metadata]...';


GO
CREATE SCHEMA [metadata]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [person]...';


GO
CREATE SCHEMA [person]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [presentation]...';


GO
CREATE SCHEMA [presentation]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [profile]...';


GO
CREATE SCHEMA [profile]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [req]...';


GO
CREATE SCHEMA [req]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [sec]...';


GO
CREATE SCHEMA [sec]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [stock]...';


GO
CREATE SCHEMA [stock]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [wf]...';


GO
CREATE SCHEMA [wf]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [acc].[stock_investment]...';


GO
CREATE TABLE [acc].[stock_investment] (
    [id]                INT             IDENTITY (1, 1) NOT NULL,
    [operation_id]      INT             NOT NULL,
    [operation_part_id] INT             NOT NULL,
    [amount]            DECIMAL (26, 6) NOT NULL,
    [price]             DECIMAL (26, 6) NOT NULL,
    [currency_id]       INT             NOT NULL,
    [shareholder_id]    INT             NOT NULL,
    [issuer_id]         INT             NOT NULL,
    [share_type_id]     INT             NOT NULL,
    [modified_date]     DATETIME        NOT NULL,
    [modified_by]       INT             NOT NULL,
    CONSTRAINT [pk_stock_investment] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [acc].[authorized_capital]...';


GO
CREATE TABLE [acc].[authorized_capital] (
    [id]                INT             IDENTITY (1, 1) NOT NULL,
    [operation_id]      INT             NOT NULL,
    [operation_part_id] INT             NOT NULL,
    [amount]            DECIMAL (26, 6) NOT NULL,
    [price]             DECIMAL (26, 6) NOT NULL,
    [currency_id]       INT             NOT NULL,
    [issuer_id]         INT             NOT NULL,
    [issue_id]          INT             NOT NULL,
    [share_type_id]     INT             NOT NULL,
    [modified_date]     DATETIME        NOT NULL,
    [modified_by]       INT             NOT NULL,
    CONSTRAINT [pk_authorized_capital] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [acc].[account]...';


GO
CREATE TABLE [acc].[account] (
    [id]          INT            NOT NULL,
    [code]        VARCHAR (32)   NOT NULL,
    [name]        NVARCHAR (256) NOT NULL,
    [schema_name] NVARCHAR (128) NOT NULL,
    [table_name]  NVARCHAR (128) NOT NULL,
    [comments]    NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_account] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_account_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [acc].[operation_part]...';


GO
CREATE TABLE [acc].[operation_part] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_operation_part] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [acc].[operation]...';


GO
CREATE TABLE [acc].[operation] (
    [id]                  INT             IDENTITY (1, 1) NOT NULL,
    [document_type_id]    INT             NOT NULL,
    [document_id]         INT             NOT NULL,
    [operation_date]      DATE            NOT NULL,
    [name]                NVARCHAR (1024) NOT NULL,
    [debit_account_code]  VARCHAR (32)    NOT NULL,
    [credit_account_code] VARCHAR (32)    NOT NULL,
    [modified_date]       DATETIME        NOT NULL,
    [modified_by]         INT             NOT NULL,
    CONSTRAINT [pk_operation] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [acc].[treasury_stock]...';


GO
CREATE TABLE [acc].[treasury_stock] (
    [id]                INT             IDENTITY (1, 1) NOT NULL,
    [operation_id]      INT             NOT NULL,
    [operation_part_id] INT             NOT NULL,
    [amount]            DECIMAL (26, 6) NOT NULL,
    [price]             DECIMAL (26, 6) NOT NULL,
    [currency_id]       INT             NOT NULL,
    [issuer_id]         INT             NOT NULL,
    [share_type_id]     INT             NOT NULL,
    [modified_date]     DATETIME        NOT NULL,
    [modified_by]       INT             NOT NULL,
    CONSTRAINT [pk_treasury_stock] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [acc].[stock_transit]...';


GO
CREATE TABLE [acc].[stock_transit] (
    [id]                INT             IDENTITY (1, 1) NOT NULL,
    [operation_id]      INT             NOT NULL,
    [operation_part_id] INT             NOT NULL,
    [amount]            DECIMAL (26, 6) NOT NULL,
    [price]             DECIMAL (26, 6) NOT NULL,
    [currency_id]       INT             NOT NULL,
    [shareholder_id]    INT             NOT NULL,
    [issuer_id]         INT             NOT NULL,
    [issue_id]          INT             NOT NULL,
    [share_type_id]     INT             NOT NULL,
    [modified_date]     DATETIME        NOT NULL,
    [modified_by]       INT             NOT NULL,
    CONSTRAINT [pk_stock_transit] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[company_history]...';


GO
CREATE TABLE [biz].[company_history] (
    [hid]               INT             NOT NULL,
    [company_id]        INT             NOT NULL,
    [period_start]      DATE            NOT NULL,
    [period_end]        DATE            NOT NULL,
    [okopf_id]          INT             NULL,
    [short_name]        NVARCHAR (256)  NULL,
    [full_name]         NVARCHAR (1024) NULL,
    [short_name_intl]   NVARCHAR (256)  NULL,
    [full_name_intl]    NVARCHAR (1024) NULL,
    [full_name_rus]     NVARCHAR (1024) NULL,
    [business_phone1]   VARCHAR (32)    NULL,
    [business_phone2]   VARCHAR (32)    NULL,
    [other_phone1]      VARCHAR (32)    NULL,
    [other_phone2]      VARCHAR (32)    NULL,
    [email]             NVARCHAR (128)  NULL,
    [webpage]           NVARCHAR (128)  NULL,
    [legal_address_id]  INT             NULL,
    [mail_address_id]   INT             NULL,
    [actual_address_id] INT             NULL,
    [company_okved_id]  INT             NULL,
    [okpo]              NVARCHAR (32)   NULL,
    [modified_by]       INT             NOT NULL,
    [modified_date]     DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_company_history] PRIMARY KEY NONCLUSTERED ([hid] ASC),
    CONSTRAINT [ak_company_history_id] UNIQUE CLUSTERED ([company_id] ASC, [hid] ASC)
);


GO
PRINT N'Creating [biz].[company_history].[ix_company_history_period]...';


GO
CREATE NONCLUSTERED INDEX [ix_company_history_period]
    ON [biz].[company_history]([period_start] ASC, [period_end] ASC);


GO
PRINT N'Creating [biz].[business_entity_history]...';


GO
CREATE TABLE [biz].[business_entity_history] (
    [hid]                INT            IDENTITY (1, 1) NOT NULL,
    [document_type_id]   INT            NOT NULL,
    [business_entity_id] INT            NOT NULL,
    [period_start]       DATE           NOT NULL,
    [period_end]         DATE           NOT NULL,
    [legal_address_id]   INT            NULL,
    [mail_address_id]    INT            NULL,
    [actual_address_id]  INT            NULL,
    [webpage]            NVARCHAR (128) NULL,
    [modified_by]        INT            NOT NULL,
    [modified_date]      DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_business_entity_history] PRIMARY KEY CLUSTERED ([hid] ASC)
);


GO
PRINT N'Creating [biz].[business_entity]...';


GO
CREATE TABLE [biz].[business_entity] (
    [id]               INT            IDENTITY (1, 1) NOT NULL,
    [document_type_id] INT            NOT NULL,
    [state]            SMALLINT       NOT NULL,
    [name]             NVARCHAR (256) NOT NULL,
    [ogrn]             NVARCHAR (32)  NULL,
    [inn]              NVARCHAR (32)  NULL,
    [kpp]              NVARCHAR (32)  NULL,
    [country_id]       INT            NOT NULL,
    [modified_by]      INT            NOT NULL,
    [modified_date]    DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[subdivision_type]...';


GO
CREATE TABLE [biz].[subdivision_type] (
    [id]       INT            NOT NULL,
    [name]     NVARCHAR (256) NOT NULL,
    [comments] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[subdivision_history]...';


GO
CREATE TABLE [biz].[subdivision_history] (
    [hid]                 INT            NOT NULL,
    [subdivision_id]      INT            NOT NULL,
    [period_start]        DATE           NOT NULL,
    [period_end]          DATE           NOT NULL,
    [business_phone1]     VARCHAR (32)   NULL,
    [business_phone2]     VARCHAR (32)   NULL,
    [other_phone1]        VARCHAR (32)   NULL,
    [other_phone2]        VARCHAR (32)   NULL,
    [email]               NVARCHAR (128) NULL,
    [webpage]             NVARCHAR (128) NULL,
    [legal_address_id]    INT            NULL,
    [mail_address_id]     INT            NULL,
    [actual_address_id]   INT            NULL,
    [executive_person_id] INT            NULL,
    [modified_by]         INT            NOT NULL,
    [modified_date]       DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_subdivision_history] PRIMARY KEY NONCLUSTERED ([hid] ASC),
    CONSTRAINT [ak_subdivision_history_id] UNIQUE CLUSTERED ([subdivision_id] ASC, [hid] ASC)
);


GO
PRINT N'Creating [biz].[subdivision]...';


GO
CREATE TABLE [biz].[subdivision] (
    [id]                  INT            NOT NULL,
    [state]               SMALLINT       NOT NULL,
    [name]                NVARCHAR (256) NOT NULL,
    [subdivision_type_id] INT            NOT NULL,
    [registration_date]   DATE           NULL,
    [ogrn]                NVARCHAR (32)  NULL,
    [inn]                 NVARCHAR (32)  NULL,
    [kpp]                 NVARCHAR (32)  NULL,
    [parent_company_id]   INT            NOT NULL,
    [country_id]          INT            NOT NULL,
    [modified_by]         INT            NOT NULL,
    [modified_date]       DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[address]...';


GO
CREATE TABLE [biz].[address] (
    [id]            INT              IDENTITY (1, 1) NOT NULL,
    [country_id]    INT              NULL,
    [fias_id]       UNIQUEIDENTIFIER NULL,
    [street]        NVARCHAR (256)   NULL,
    [city]          NVARCHAR (256)   NULL,
    [postal_code]   NVARCHAR (256)   NULL,
    [region]        NVARCHAR (256)   NULL,
    [house]         NVARCHAR (256)   NULL,
    [building]      NVARCHAR (256)   NULL,
    [national]      NVARCHAR (1024)  NULL,
    [international] NVARCHAR (1024)  NULL,
    [comments]      NVARCHAR (MAX)   NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[business_entity_role]...';


GO
CREATE TABLE [biz].[business_entity_role] (
    [business_entity_id] INT NOT NULL,
    [business_role_id]   INT NOT NULL,
    CONSTRAINT [pk_business_entity_role] PRIMARY KEY CLUSTERED ([business_entity_id] ASC, [business_role_id] ASC)
);


GO
PRINT N'Creating [biz].[board_request_member]...';


GO
CREATE TABLE [biz].[board_request_member] (
    [id]                 INT            IDENTITY (1, 1) NOT NULL,
    [board_request_id]   INT            NOT NULL,
    [business_entity_id] INT            NOT NULL,
    [position_id]        INT            NULL,
    [head_of_board]      BIT            NOT NULL,
    [start_of_term]      DATE           NOT NULL,
    [end_of_term]        DATE           NULL,
    [comments]           NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[board_request]...';


GO
CREATE TABLE [biz].[board_request] (
    [id]             INT            IDENTITY (1, 1) NOT NULL,
    [board_id]       INT            NULL,
    [board_hid]      INT            NULL,
    [request_id]     INT            NOT NULL,
    [change_type_id] CHAR (1)       NOT NULL,
    [relevance_date] DATETIME       NOT NULL,
    [state]          SMALLINT       NOT NULL,
    [name]           NVARCHAR (256) NOT NULL,
    [company_id]     INT            NOT NULL,
    [board_type_id]  INT            NOT NULL,
    [secretary_id]   INT            NULL,
    [phone]          VARCHAR (32)   NULL,
    [email]          VARCHAR (128)  NULL,
    [responsibility] NVARCHAR (MAX) NULL,
    [modified_by]    INT            NOT NULL,
    [modified_date]  DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[position]...';


GO
CREATE TABLE [biz].[position] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[board_member_promoter]...';


GO
CREATE TABLE [biz].[board_member_promoter] (
    [board_member_id]    INT NOT NULL,
    [business_entity_id] INT NOT NULL,
    CONSTRAINT [pk_board_member_promoter] PRIMARY KEY CLUSTERED ([board_member_id] ASC, [business_entity_id] ASC)
);


GO
PRINT N'Creating [biz].[board_member]...';


GO
CREATE TABLE [biz].[board_member] (
    [id]                 INT            IDENTITY (1, 1) NOT NULL,
    [board_hid]          INT            NOT NULL,
    [business_entity_id] INT            NOT NULL,
    [position_id]        INT            NULL,
    [head_of_board]      BIT            NOT NULL,
    [start_of_term]      DATE           NOT NULL,
    [end_of_term]        DATE           NULL,
    [comments]           NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[board_history]...';


GO
CREATE TABLE [biz].[board_history] (
    [hid]            INT            IDENTITY (1, 1) NOT NULL,
    [board_id]       INT            NOT NULL,
    [period_start]   DATE           NOT NULL,
    [period_end]     DATE           NOT NULL,
    [secretary_id]   INT            NULL,
    [phone]          VARCHAR (32)   NULL,
    [email]          VARCHAR (128)  NULL,
    [responsibility] NVARCHAR (MAX) NULL,
    [modified_by]    INT            NOT NULL,
    [modified_date]  DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_board_history] PRIMARY KEY CLUSTERED ([hid] ASC)
);


GO
PRINT N'Creating [biz].[board]...';


GO
CREATE TABLE [biz].[board] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [company_id]    INT            NOT NULL,
    [board_type_id] INT            NOT NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[board_type]...';


GO
CREATE TABLE [biz].[board_type] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[subdivision_request]...';


GO
CREATE TABLE [biz].[subdivision_request] (
    [id]                  INT            IDENTITY (1, 1) NOT NULL,
    [subdivision_id]      INT            NULL,
    [subdivision_hid]     INT            NULL,
    [request_id]          INT            NOT NULL,
    [change_type_id]      CHAR (1)       NOT NULL,
    [relevance_date]      DATETIME       NOT NULL,
    [state]               SMALLINT       NOT NULL,
    [name]                NVARCHAR (256) NOT NULL,
    [subdivision_type_id] INT            NOT NULL,
    [registration_date]   DATE           NULL,
    [ogrn]                NVARCHAR (32)  NULL,
    [inn]                 NVARCHAR (32)  NULL,
    [kpp]                 NVARCHAR (32)  NULL,
    [parent_company_id]   INT            NOT NULL,
    [country_id]          INT            NOT NULL,
    [business_phone1]     VARCHAR (32)   NULL,
    [business_phone2]     VARCHAR (32)   NULL,
    [other_phone1]        VARCHAR (32)   NULL,
    [other_phone2]        VARCHAR (32)   NULL,
    [email]               NVARCHAR (128) NULL,
    [webpage]             NVARCHAR (128) NULL,
    [legal_address_id]    INT            NULL,
    [mail_address_id]     INT            NULL,
    [actual_address_id]   INT            NULL,
    [executive_person_id] INT            NULL,
    [modified_by]         INT            NOT NULL,
    [modified_date]       DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[document_state_global]...';


GO
CREATE TABLE [biz].[document_state_global] (
    [document_state_id] INT            NOT NULL,
    [lang]              CHAR (2)       NOT NULL,
    [name]              NVARCHAR (256) NULL,
    [comments]          NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_document_state_global] PRIMARY KEY CLUSTERED ([document_state_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [biz].[company_okved_item]...';


GO
CREATE TABLE [biz].[company_okved_item] (
    [company_okved_id] INT NOT NULL,
    [okved_id]         INT NOT NULL,
    CONSTRAINT [pk_company_okved_item] PRIMARY KEY CLUSTERED ([company_okved_id] ASC, [okved_id] ASC)
);


GO
PRINT N'Creating [biz].[company_okved]...';


GO
CREATE TABLE [biz].[company_okved] (
    [id] INT IDENTITY (1, 1) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[reorganization]...';


GO
CREATE TABLE [biz].[reorganization] (
    [id] INT IDENTITY (1, 1) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[reorganization_item]...';


GO
CREATE TABLE [biz].[reorganization_item] (
    [reorganization_id]      INT  NOT NULL,
    [reorganization_type_id] INT  NOT NULL,
    [reorganization_date]    DATE NOT NULL,
    [assignee_company_id]    INT  NOT NULL,
    CONSTRAINT [pk_reorganization_item] PRIMARY KEY CLUSTERED ([reorganization_id] ASC, [reorganization_type_id] ASC, [assignee_company_id] ASC)
);


GO
PRINT N'Creating [biz].[reorganization_type]...';


GO
CREATE TABLE [biz].[reorganization_type] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_reorganization_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[board_request_member_promoter]...';


GO
CREATE TABLE [biz].[board_request_member_promoter] (
    [board_request_member_id] INT NOT NULL,
    [business_entity_id]      INT NOT NULL,
    CONSTRAINT [pk_board_request_member_promoter] PRIMARY KEY CLUSTERED ([board_request_member_id] ASC, [business_entity_id] ASC)
);


GO
PRINT N'Creating [biz].[kladr]...';


GO
CREATE TABLE [biz].[kladr] (
    [id]             INT            IDENTITY (1, 1) NOT NULL,
    [state]          SMALLINT       NOT NULL,
    [code]           CHAR (13)      NOT NULL,
    [name]           NVARCHAR (255) NOT NULL,
    [abbreviation]   NVARCHAR (10)  NOT NULL,
    [postcode]       CHAR (6)       NULL,
    [code_ifns]      CHAR (4)       NULL,
    [code_area_ifns] CHAR (4)       NULL,
    [code_okato]     CHAR (11)      NULL,
    CONSTRAINT [pk_kladr] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_kladr_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [biz].[business_role]...';


GO
CREATE TABLE [biz].[business_role] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_business_role] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[company_setup_type]...';


GO
CREATE TABLE [biz].[company_setup_type] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_company_setup_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[company_request]...';


GO
CREATE TABLE [biz].[company_request] (
    [id]                    INT             IDENTITY (1, 1) NOT NULL,
    [company_id]            INT             NULL,
    [company_hid]           INT             NULL,
    [request_id]            INT             NOT NULL,
    [change_type_id]        CHAR (1)        NOT NULL,
    [relevance_date]        DATETIME        NOT NULL,
    [state]                 SMALLINT        NOT NULL,
    [name]                  NVARCHAR (256)  NOT NULL,
    [joint_stock_company]   BIT             NOT NULL,
    [registration_date]     DATE            NULL,
    [liquidation_date]      DATE            NULL,
    [ogrn]                  NVARCHAR (32)   NULL,
    [ogrn_date]             DATE            NULL,
    [ogrn_authority_name]   NVARCHAR (256)  NULL,
    [inn]                   NVARCHAR (32)   NULL,
    [kpp]                   NVARCHAR (32)   NULL,
    [kpp2]                  NVARCHAR (32)   NULL,
    [kpp3]                  NVARCHAR (32)   NULL,
    [issuer_code]           NVARCHAR (32)   NULL,
    [country_id]            INT             NOT NULL,
    [company_setup_type_id] INT             NULL,
    [grn]                   NVARCHAR (32)   NULL,
    [grn_date]              DATE            NULL,
    [grn_authority_name]    NVARCHAR (256)  NULL,
    [tax_registration_date] DATE            NULL,
    [base_currency_id]      INT             NOT NULL,
    [okopf_id]              INT             NULL,
    [short_name]            NVARCHAR (256)  NULL,
    [full_name]             NVARCHAR (1024) NULL,
    [short_name_intl]       NVARCHAR (256)  NULL,
    [full_name_intl]        NVARCHAR (1024) NULL,
    [full_name_rus]         NVARCHAR (1024) NULL,
    [business_phone1]       VARCHAR (32)    NULL,
    [business_phone2]       VARCHAR (32)    NULL,
    [other_phone1]          VARCHAR (32)    NULL,
    [other_phone2]          VARCHAR (32)    NULL,
    [email]                 NVARCHAR (128)  NULL,
    [webpage]               NVARCHAR (128)  NULL,
    [legal_address_id]      INT             NULL,
    [mail_address_id]       INT             NULL,
    [actual_address_id]     INT             NULL,
    [company_okved_id]      INT             NULL,
    [okpo]                  NVARCHAR (32)   NULL,
    [reorganization_id]     INT             NULL,
    [modified_by]           INT             NOT NULL,
    [modified_date]         DATETIME2 (7)   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [biz].[company]...';


GO
CREATE TABLE [biz].[company] (
    [id]                    INT            NOT NULL,
    [state]                 SMALLINT       NOT NULL,
    [name]                  NVARCHAR (256) NOT NULL,
    [joint_stock_company]   BIT            NOT NULL,
    [registration_date]     DATE           NULL,
    [liquidation_date]      DATE           NULL,
    [ogrn]                  NVARCHAR (32)  NULL,
    [ogrn_date]             DATE           NULL,
    [ogrn_authority_name]   NVARCHAR (256) NULL,
    [inn]                   NVARCHAR (32)  NULL,
    [kpp]                   NVARCHAR (32)  NULL,
    [kpp2]                  NVARCHAR (32)  NULL,
    [kpp3]                  NVARCHAR (32)  NULL,
    [issuer_code]           NVARCHAR (32)  NULL,
    [country_id]            INT            NOT NULL,
    [company_setup_type_id] INT            NULL,
    [grn]                   NVARCHAR (32)  NULL,
    [grn_date]              DATE           NULL,
    [grn_authority_name]    NVARCHAR (256) NULL,
    [tax_registration_date] DATE           NULL,
    [base_currency_id]      INT            NOT NULL,
    [reorganization_id]     INT            NULL,
    [modified_by]           INT            NOT NULL,
    [modified_date]         DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [core].[document_attachment]...';


GO
CREATE TABLE [core].[document_attachment] (
    [id]                 INT            IDENTITY (1, 1) NOT NULL,
    [document_type_id]   INT            NOT NULL,
    [document_id]        INT            NOT NULL,
    [attachment_type_id] INT            NOT NULL,
    [file_id]            INT            NOT NULL,
    [comments]           NVARCHAR (MAX) NULL,
    [modified_by]        INT            NOT NULL,
    [modified_date]      DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [core].[property_value]...';


GO
CREATE TABLE [core].[property_value] (
    [id]               INT            IDENTITY (1, 1) NOT NULL,
    [document_type_id] INT            NOT NULL,
    [document_id]      INT            NOT NULL,
    [property_id]      INT            NOT NULL,
    [period_start]     DATE           NOT NULL,
    [period_end]       DATE           NOT NULL,
    [value]            NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_property_value] UNIQUE NONCLUSTERED ([document_type_id] ASC, [document_id] ASC, [property_id] ASC, [period_start] ASC)
);


GO
PRINT N'Creating [core].[document_transition]...';


GO
CREATE TABLE [core].[document_transition] (
    [id]               INT            IDENTITY (1, 1) NOT NULL,
    [document_id]      INT            NOT NULL,
    [document_type_id] INT            NOT NULL,
    [from_state]       SMALLINT       NOT NULL,
    [to_state]         SMALLINT       NOT NULL,
    [comments]         NVARCHAR (MAX) NULL,
    [modified_by]      INT            NOT NULL,
    [modified_date]    DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [core].[document]...';


GO
CREATE TABLE [core].[document] (
    [id]               INT             NOT NULL,
    [document_type_id] INT             NOT NULL,
    [state]            SMALLINT        NOT NULL,
    [code]             VARCHAR (128)   NULL,
    [name]             NVARCHAR (1024) NULL,
    [modified_by]      INT             NOT NULL,
    [modified_date]    DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_document] PRIMARY KEY CLUSTERED ([document_type_id] ASC, [id] ASC)
);


GO
PRINT N'Creating [core].[document_history]...';


GO
CREATE TABLE [core].[document_history] (
    [hid]              INT           NOT NULL,
    [document_id]      INT           NOT NULL,
    [document_type_id] INT           NOT NULL,
    [period_start]     DATE          NOT NULL,
    [period_end]       DATE          NOT NULL,
    [modified_by]      INT           NOT NULL,
    [modified_date]    DATETIME2 (7) NOT NULL,
    CONSTRAINT [pk_document_history] PRIMARY KEY CLUSTERED ([document_type_id] ASC, [hid] ASC)
);


GO
PRINT N'Creating [core].[external_link]...';


GO
CREATE TABLE [core].[external_link] (
    [document_id]      INT           NOT NULL,
    [document_type_id] INT           NOT NULL,
    [system_code]      VARCHAR (16)  NOT NULL,
    [code]             VARCHAR (128) NOT NULL,
    CONSTRAINT [pk_external_link] PRIMARY KEY CLUSTERED ([document_type_id] ASC, [document_id] ASC, [system_code] ASC)
);


GO
PRINT N'Creating [core].[hierarchy_document]...';


GO
CREATE TABLE [core].[hierarchy_document] (
    [hierarchy_id]     INT           NOT NULL,
    [document_id]      INT           NOT NULL,
    [document_type_id] INT           NOT NULL,
    [modified_by]      INT           NOT NULL,
    [modified_date]    DATETIME2 (7) NOT NULL,
    CONSTRAINT [pk_hierarchy_document] PRIMARY KEY CLUSTERED ([hierarchy_id] ASC, [document_id] ASC, [document_type_id] ASC)
);


GO
PRINT N'Creating [core].[hierarchy]...';


GO
CREATE TABLE [core].[hierarchy] (
    [id]              INT            IDENTITY (1, 1) NOT NULL,
    [state]           SMALLINT       NOT NULL,
    [path]            VARCHAR (512)  NOT NULL,
    [name]            NVARCHAR (256) NOT NULL,
    [access_right_id] INT            NULL,
    [modified_by]     INT            NOT NULL,
    [modified_date]   DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_hierarchy] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_hierarchy_path] UNIQUE NONCLUSTERED ([path] ASC)
);


GO
PRINT N'Creating [dic].[okved]...';


GO
CREATE TABLE [dic].[okved] (
    [id]            INT             IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT        NOT NULL,
    [version]       SMALLINT        NOT NULL,
    [section]       CHAR (1)        NOT NULL,
    [code]          VARCHAR (32)    NOT NULL,
    [parent_code]   VARCHAR (32)    NULL,
    [name]          NVARCHAR (1024) NOT NULL,
    [comments]      NVARCHAR (MAX)  NULL,
    [modified_by]   INT             NOT NULL,
    [modified_date] DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_okved] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dic].[okopf]...';


GO
CREATE TABLE [dic].[okopf] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          CHAR (5)       NOT NULL,
    [parent_code]   CHAR (5)       NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [singular_name] NVARCHAR (256) NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_okopf] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dic].[okopf].[ak_okopf_code]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [ak_okopf_code]
    ON [dic].[okopf]([code] ASC) WHERE [state] = 1;


GO
PRINT N'Creating [dic].[okof]...';


GO
CREATE TABLE [dic].[okof] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          VARCHAR (128)  NOT NULL,
    [name]          NVARCHAR (512) NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_okof] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dic].[okof].[ak_okof_code]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [ak_okof_code]
    ON [dic].[okof]([code] ASC) WHERE [state] = 1;


GO
PRINT N'Creating [dic].[country]...';


GO
CREATE TABLE [dic].[country] (
    [id]            INT             IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT        NOT NULL,
    [code]          CHAR (2)        NOT NULL,
    [alf3]          CHAR (3)        NOT NULL,
    [numeric_code]  CHAR (3)        NOT NULL,
    [name]          NVARCHAR (256)  NOT NULL,
    [full_name]     NVARCHAR (1024) NOT NULL,
    [comments]      NVARCHAR (MAX)  NULL,
    [modified_by]   INT             NOT NULL,
    [modified_date] DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_country] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_country_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [dic].[currency]...';


GO
CREATE TABLE [dic].[currency] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          CHAR (3)       NOT NULL,
    [numeric_code]  CHAR (3)       NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [minor_unit]    SMALLINT       NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_currency] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dic].[currency_rate]...';


GO
CREATE TABLE [dic].[currency_rate] (
    [id]               INT             IDENTITY (1, 1) NOT NULL,
    [from_currency_id] INT             NOT NULL,
    [to_currency_id]   INT             NOT NULL,
    [period_start]     DATE            NOT NULL,
    [period_end]       DATE            NOT NULL,
    [amount]           INT             NOT NULL,
    [value]            DECIMAL (28, 6) NOT NULL,
    CONSTRAINT [pk_currency_rate] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dic].[unit_measure]...';


GO
CREATE TABLE [dic].[unit_measure] (
    [id]                    INT            IDENTITY (1, 1) NOT NULL,
    [state]                 SMALLINT       NOT NULL,
    [code]                  CHAR (4)       NOT NULL,
    [name]                  NVARCHAR (256) NOT NULL,
    [section]               CHAR (1)       NOT NULL,
    [unit_measure_group_id] SMALLINT       NOT NULL,
    [local_name]            NVARCHAR (32)  NULL,
    [international_name]    NVARCHAR (32)  NULL,
    [local_symbol]          NVARCHAR (32)  NULL,
    [international_symbol]  NVARCHAR (32)  NULL,
    [comments]              NVARCHAR (MAX) NULL,
    [modified_by]           INT            NOT NULL,
    [modified_date]         DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_unit_measure] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_unit_measure_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [dic].[lang]...';


GO
CREATE TABLE [dic].[lang] (
    [id]          INT            NOT NULL,
    [state]       SMALLINT       NOT NULL,
    [code]        CHAR (2)       NOT NULL,
    [name]        NVARCHAR (256) NOT NULL,
    [native_name] NVARCHAR (256) NOT NULL,
    [comments]    NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_lang] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_lang_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [dic].[unit_measure_conversion]...';


GO
CREATE TABLE [dic].[unit_measure_conversion] (
    [id]                   INT    IDENTITY (1, 1) NOT NULL,
    [from_unit_measure_id] INT    NOT NULL,
    [to_unit_measure_id]   INT    NOT NULL,
    [multiplier]           BIGINT NOT NULL,
    [divider]              BIGINT NOT NULL,
    CONSTRAINT [pk_unit_measure_conversion] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dic].[unit_measure_group]...';


GO
CREATE TABLE [dic].[unit_measure_group] (
    [id]            INT            NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_unit_measure_group] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dic].[unit_measure_section]...';


GO
CREATE TABLE [dic].[unit_measure_section] (
    [id]            INT            NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          CHAR (1)       NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_unit_measure_section] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_unit_measure_section_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [fs].[file]...';


GO
CREATE TABLE [fs].[file] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [relative_path] NVARCHAR (MAX) NOT NULL,
    [comments]      NVARCHAR (MAX) NOT NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[transition_template]...';


GO
CREATE TABLE [metadata].[transition_template] (
    [id]               INT      IDENTITY (1, 1) NOT NULL,
    [document_type_id] INT      NOT NULL,
    [from_state]       SMALLINT NOT NULL,
    [to_state]         SMALLINT NOT NULL,
    [access_right_id]  INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[document_state]...';


GO
CREATE TABLE [metadata].[document_state] (
    [id]               INT            IDENTITY (1, 1) NOT NULL,
    [document_type_id] INT            NOT NULL,
    [value]            SMALLINT       NOT NULL,
    [code]             VARCHAR (128)  NOT NULL,
    [name]             NVARCHAR (256) NOT NULL,
    [comments]         NVARCHAR (MAX) NULL,
    [modified_by]      INT            NOT NULL,
    [modified_date]    DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [AK_document_state_value] UNIQUE NONCLUSTERED ([document_type_id] ASC, [value] ASC)
);


GO
PRINT N'Creating [metadata].[property]...';


GO
CREATE TABLE [metadata].[property] (
    [id]               INT            IDENTITY (1, 1) NOT NULL,
    [document_type_id] INT            NOT NULL,
    [property_type_id] INT            NOT NULL,
    [code]             VARCHAR (128)  NOT NULL,
    [name]             NVARCHAR (256) NOT NULL,
    [supports_history] BIT            NOT NULL,
    [format]           NVARCHAR (256) NULL,
    [comments]         NVARCHAR (MAX) NULL,
    [modified_by]      INT            NOT NULL,
    [modified_date]    DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_property_id_document_type_id] UNIQUE NONCLUSTERED ([document_type_id] ASC, [id] ASC)
);


GO
PRINT N'Creating [metadata].[property_definition_global]...';


GO
CREATE TABLE [metadata].[property_definition_global] (
    [property_definition_id] INT            NOT NULL,
    [lang]                   CHAR (2)       NOT NULL,
    [title]                  NVARCHAR (256) NULL,
    CONSTRAINT [pk_property_definition_global] PRIMARY KEY CLUSTERED ([property_definition_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [metadata].[data_operation_type]...';


GO
CREATE TABLE [metadata].[data_operation_type] (
    [id]   INT            NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[request_type_global]...';


GO
CREATE TABLE [metadata].[request_type_global] (
    [request_type_id] INT            NOT NULL,
    [lang]            CHAR (2)       NOT NULL,
    [name]            NVARCHAR (256) NULL,
    CONSTRAINT [pk_request_type_global] PRIMARY KEY CLUSTERED ([request_type_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [metadata].[document_type_global]...';


GO
CREATE TABLE [metadata].[document_type_global] (
    [document_type_id] INT            NOT NULL,
    [lang]             CHAR (2)       NOT NULL,
    [name]             NVARCHAR (256) NULL,
    [title]            NVARCHAR (512) NULL,
    CONSTRAINT [pk_document_type_global] PRIMARY KEY CLUSTERED ([document_type_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [metadata].[change_type]...';


GO
CREATE TABLE [metadata].[change_type] (
    [id]   CHAR (1)       NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[property_type]...';


GO
CREATE TABLE [metadata].[property_type] (
    [id]   INT            NOT NULL,
    [code] VARCHAR (64)   NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_property_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[request_transition_template]...';


GO
CREATE TABLE [metadata].[request_transition_template] (
    [id]                INT            IDENTITY (1, 1) NOT NULL,
    [request_type_id]   INT            NOT NULL,
    [from_state]        SMALLINT       NOT NULL,
    [to_state]          SMALLINT       NOT NULL,
    [access_right_code] VARCHAR (128)  NOT NULL,
    [options]           VARCHAR (1024) NULL,
    CONSTRAINT [pk_request_transition_template] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[document_type]...';


GO
CREATE TABLE [metadata].[document_type] (
    [id]                 INT             IDENTITY (1, 1) NOT NULL,
    [state]              SMALLINT        NOT NULL,
    [code]               VARCHAR (128)   NOT NULL,
    [name]               NVARCHAR (256)  NOT NULL,
    [title]              NVARCHAR (512)  NULL,
    [schema_object_type] NVARCHAR (1024) NULL,
    [object_type]        NVARCHAR (1024) NULL,
    [schema_name]        NVARCHAR (64)   NULL,
    [table_name]         NVARCHAR (64)   NULL,
    [entity_type]        NVARCHAR (1024) NULL,
    [history_type]       NVARCHAR (1024) NULL,
    [data_adapter]       NVARCHAR (1024) NULL,
    [image_name]         VARCHAR (128)   NOT NULL,
    [supports_history]   BIT             NOT NULL,
    [supports_hierarchy] BIT             NOT NULL,
    [modified_by]        INT             NOT NULL,
    [modified_date]      DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_document_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[property_definition]...';


GO
CREATE TABLE [metadata].[property_definition] (
    [id]                INT            IDENTITY (1, 1) NOT NULL,
    [state]             SMALLINT       NOT NULL,
    [document_type_id]  INT            NOT NULL,
    [ordinal]           INT            NOT NULL,
    [name]              NVARCHAR (64)  NOT NULL,
    [title]             NVARCHAR (256) NOT NULL,
    [db_type]           NVARCHAR (128) NOT NULL,
    [maximum_length]    INT            NULL,
    [numeric_precision] INT            NULL,
    [numeric_scale]     INT            NULL,
    [nullable]          BIT            NOT NULL,
    [generated]         BIT            NOT NULL,
    [can_set]           BIT            NOT NULL,
    [can_update]        BIT            NOT NULL,
    [historical]        BIT            NOT NULL,
    [base_set]          VARCHAR (16)   NOT NULL,
    CONSTRAINT [pk_property_definition] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[request_type]...';


GO
CREATE TABLE [metadata].[request_type] (
    [id]                     INT             IDENTITY (1, 1) NOT NULL,
    [state]                  SMALLINT        NOT NULL,
    [code]                   VARCHAR (128)   NOT NULL,
    [name]                   NVARCHAR (256)  NOT NULL,
    [data_operation_type_id] INT             NOT NULL,
    [ordinal]                INT             NOT NULL,
    [visible]                BIT             NOT NULL,
    [document_type_id]       INT             NOT NULL,
    [controller]             VARCHAR (128)   NOT NULL,
    [action]                 VARCHAR (128)   NOT NULL,
    [parameters]             VARCHAR (128)   NULL,
    [access_right_code]      VARCHAR (128)   NOT NULL,
    [edit_request_type_code] VARCHAR (128)   NULL,
    [view_request_type_code] VARCHAR (128)   NULL,
    [workflow_type_id]       INT             NULL,
    [view_type]              VARCHAR (128)   NULL,
    [view_source]            NVARCHAR (1024) NULL,
    [modified_by]            INT             NOT NULL,
    [modified_date]          DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_request_type] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_request_type_action] UNIQUE NONCLUSTERED ([controller] ASC, [action] ASC),
    CONSTRAINT [ak_request_type_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [person].[relation_type]...';


GO
CREATE TABLE [person].[relation_type] (
    [id]             INT            NOT NULL,
    [name]           NVARCHAR (256) NOT NULL,
    [alternate_name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_relation_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [person].[person_request]...';


GO
CREATE TABLE [person].[person_request] (
    [id]                INT            IDENTITY (1, 1) NOT NULL,
    [person_id]         INT            NULL,
    [person_hid]        INT            NULL,
    [request_id]        INT            NOT NULL,
    [change_type_id]    CHAR (1)       NOT NULL,
    [relevance_date]    DATETIME       NOT NULL,
    [state]             SMALLINT       NOT NULL,
    [name]              NVARCHAR (256) NOT NULL,
    [inn]               NVARCHAR (32)  NULL,
    [birthdate]         DATE           NULL,
    [place_of_birth]    NVARCHAR (256) NULL,
    [country_id]        INT            NOT NULL,
    [title]             NVARCHAR (32)  NULL,
    [first_name]        NVARCHAR (128) NULL,
    [middle_name]       NVARCHAR (128) NULL,
    [last_name]         NVARCHAR (128) NULL,
    [full_name]         NVARCHAR (256) NULL,
    [business_phone1]   VARCHAR (32)   NULL,
    [business_phone2]   VARCHAR (32)   NULL,
    [mobile_phone1]     VARCHAR (32)   NULL,
    [mobile_phone2]     VARCHAR (32)   NULL,
    [home_phone1]       VARCHAR (32)   NULL,
    [home_phone2]       VARCHAR (32)   NULL,
    [other_phone1]      VARCHAR (32)   NULL,
    [other_phone2]      VARCHAR (32)   NULL,
    [email1]            NVARCHAR (128) NULL,
    [email2]            NVARCHAR (128) NULL,
    [skype]             NVARCHAR (128) NULL,
    [webpage]           NVARCHAR (128) NULL,
    [legal_address_id]  INT            NULL,
    [mail_address_id]   INT            NULL,
    [actual_address_id] INT            NULL,
    [modified_by]       INT            NOT NULL,
    [modified_date]     DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [person].[person_relation_request]...';


GO
CREATE TABLE [person].[person_relation_request] (
    [id]                 INT           IDENTITY (1, 1) NOT NULL,
    [person_relation_id] INT           NULL,
    [request_id]         INT           NOT NULL,
    [change_type_id]     CHAR (1)      NOT NULL,
    [state]              SMALLINT      NOT NULL,
    [person_id]          INT           NOT NULL,
    [relative_person_id] INT           NOT NULL,
    [period_start]       DATE          NOT NULL,
    [period_end]         DATE          NULL,
    [relation_type_id]   INT           NOT NULL,
    [modified_by]        INT           NOT NULL,
    [modified_date]      DATETIME2 (7) NOT NULL,
    CONSTRAINT [pk_person_relation_request] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [person].[person_relation]...';


GO
CREATE TABLE [person].[person_relation] (
    [id]                 INT           IDENTITY (1, 1) NOT NULL,
    [state]              SMALLINT      NOT NULL,
    [person_id]          INT           NOT NULL,
    [relative_person_id] INT           NOT NULL,
    [period_start]       DATE          NOT NULL,
    [period_end]         DATE          NULL,
    [relation_type_id]   INT           NOT NULL,
    [modified_by]        INT           NOT NULL,
    [modified_date]      DATETIME2 (7) NOT NULL,
    CONSTRAINT [pk_person_relation] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_person_relation] UNIQUE NONCLUSTERED ([person_id] ASC, [relative_person_id] ASC, [period_start] ASC)
);


GO
PRINT N'Creating [person].[person_history]...';


GO
CREATE TABLE [person].[person_history] (
    [hid]               INT            NOT NULL,
    [person_id]         INT            NOT NULL,
    [period_start]      DATE           NOT NULL,
    [period_end]        DATE           NOT NULL,
    [title]             NVARCHAR (32)  NULL,
    [first_name]        NVARCHAR (128) NULL,
    [middle_name]       NVARCHAR (128) NULL,
    [last_name]         NVARCHAR (128) NULL,
    [full_name]         NVARCHAR (256) NULL,
    [business_phone1]   VARCHAR (32)   NULL,
    [business_phone2]   VARCHAR (32)   NULL,
    [mobile_phone1]     VARCHAR (32)   NULL,
    [mobile_phone2]     VARCHAR (32)   NULL,
    [home_phone1]       VARCHAR (32)   NULL,
    [home_phone2]       VARCHAR (32)   NULL,
    [other_phone1]      VARCHAR (32)   NULL,
    [other_phone2]      VARCHAR (32)   NULL,
    [email1]            NVARCHAR (128) NULL,
    [email2]            NVARCHAR (128) NULL,
    [skype]             NVARCHAR (128) NULL,
    [webpage]           NVARCHAR (128) NULL,
    [legal_address_id]  INT            NULL,
    [mail_address_id]   INT            NULL,
    [actual_address_id] INT            NULL,
    [modified_by]       INT            NOT NULL,
    [modified_date]     DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_person_history] PRIMARY KEY NONCLUSTERED ([hid] ASC),
    CONSTRAINT [ak_person_history_id] UNIQUE CLUSTERED ([person_id] ASC, [hid] ASC)
);


GO
PRINT N'Creating [person].[person]...';


GO
CREATE TABLE [person].[person] (
    [id]             INT            NOT NULL,
    [state]          SMALLINT       NOT NULL,
    [name]           NVARCHAR (256) NOT NULL,
    [inn]            NVARCHAR (32)  NULL,
    [birthdate]      DATE           NULL,
    [place_of_birth] NVARCHAR (256) NULL,
    [country_id]     INT            NOT NULL,
    [modified_by]    INT            NOT NULL,
    [modified_date]  DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [presentation].[command_global]...';


GO
CREATE TABLE [presentation].[command_global] (
    [command_id] INT            NOT NULL,
    [lang]       CHAR (2)       NOT NULL,
    [name]       NVARCHAR (256) NULL,
    [title]      NVARCHAR (256) NULL,
    CONSTRAINT [pk_command_global] PRIMARY KEY CLUSTERED ([command_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [presentation].[command]...';


GO
CREATE TABLE [presentation].[command] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          VARCHAR (128)  NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [title]         NVARCHAR (256) NULL,
    [image_name]    VARCHAR (128)  NOT NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_command_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [presentation].[node_global]...';


GO
CREATE TABLE [presentation].[node_global] (
    [node_id] INT            NOT NULL,
    [lang]    CHAR (2)       NOT NULL,
    [name]    NVARCHAR (256) NULL,
    [title]   NVARCHAR (256) NULL,
    CONSTRAINT [pk_node_global] PRIMARY KEY CLUSTERED ([node_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [presentation].[node_type]...';


GO
CREATE TABLE [presentation].[node_type] (
    [id]   INT            NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [presentation].[node]...';


GO
CREATE TABLE [presentation].[node] (
    [id]                INT            IDENTITY (1, 1) NOT NULL,
    [state]             SMALLINT       NOT NULL,
    [code]              VARCHAR (128)  NOT NULL,
    [parent_code]       VARCHAR (128)  NULL,
    [name]              NVARCHAR (256) NOT NULL,
    [title]             NVARCHAR (256) NULL,
    [node_type_id]      INT            NOT NULL,
    [ordinal]           INT            NOT NULL,
    [parameters]        NVARCHAR (MAX) NULL,
    [image]             NVARCHAR (MAX) NULL,
    [image_name]        VARCHAR (128)  NULL,
    [request_type_code] VARCHAR (128)  NULL,
    [modified_by]       INT            NOT NULL,
    [modified_date]     DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_node] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_node_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [presentation].[view_type]...';


GO
CREATE TABLE [presentation].[view_type] (
    [id]   INT            NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_view_type] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_view_type_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [profile].[default_parameter]...';


GO
CREATE TABLE [profile].[default_parameter] (
    [id]    INT            NOT NULL,
    [code]  VARCHAR (128)  NOT NULL,
    [name]  NVARCHAR (256) NOT NULL,
    [type]  VARCHAR (128)  NOT NULL,
    [value] NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_default_parameter] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_default_parameter_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [profile].[parameter]...';


GO
CREATE TABLE [profile].[parameter] (
    [id]             INT            IDENTITY (1, 1) NOT NULL,
    [user_id]        INT            NOT NULL,
    [parameter_code] VARCHAR (128)  NOT NULL,
    [value]          NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_parameter] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_parameter_user_code] UNIQUE NONCLUSTERED ([user_id] ASC, [parameter_code] ASC)
);


GO
PRINT N'Creating [profile].[application_state]...';


GO
CREATE TABLE [profile].[application_state] (
    [id]      INT            IDENTITY (1, 1) NOT NULL,
    [user_id] INT            NOT NULL,
    [section] VARCHAR (256)  NOT NULL,
    [data]    NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [pk_application_state] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [req].[request_transition]...';


GO
CREATE TABLE [req].[request_transition] (
    [id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [request_id]    INT            NOT NULL,
    [from_state]    SMALLINT       NOT NULL,
    [to_state]      SMALLINT       NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_request_transition] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [req].[request]...';


GO
CREATE TABLE [req].[request] (
    [id]                     INT            IDENTITY (1, 1) NOT NULL,
    [state]                  SMALLINT       NOT NULL,
    [name]                   NVARCHAR (256) NULL,
    [request_type_id]        INT            NOT NULL,
    [author_id]              INT            NOT NULL,
    [data_operation_type_id] INT            NOT NULL,
    [document_type_id]       INT            NULL,
    [document_id]            INT            NULL,
    [document_hid]           INT            NULL,
    [document_name]          NVARCHAR (256) NULL,
    [request_data_id]        INT            NULL,
    [relevance_date]         DATE           NULL,
    [process_id]             INT            NULL,
    [comments_history]       NVARCHAR (MAX) NULL,
    [modified_by]            INT            NOT NULL,
    [modified_date]          DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_request] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [sec].[user_role]...';


GO
CREATE TABLE [sec].[user_role] (
    [user_id] INT NOT NULL,
    [role_id] INT NOT NULL,
    CONSTRAINT [pk_user_role] PRIMARY KEY CLUSTERED ([user_id] ASC, [role_id] ASC)
);


GO
PRINT N'Creating [sec].[role]...';


GO
CREATE TABLE [sec].[role] (
    [id]            INT            NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          NVARCHAR (128) NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_role] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [sec].[user]...';


GO
CREATE TABLE [sec].[user] (
    [id]            INT            NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          NVARCHAR (128) NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [email]         NVARCHAR (256) NULL,
    [department]    NVARCHAR (256) NULL,
    [company]       NVARCHAR (256) NULL,
    [job_title]     NVARCHAR (128) NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_user] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [sec].[role_access_right]...';


GO
CREATE TABLE [sec].[role_access_right] (
    [role_id]         INT NOT NULL,
    [access_right_id] INT NOT NULL,
    CONSTRAINT [pk_role_access_right] PRIMARY KEY CLUSTERED ([role_id] ASC, [access_right_id] ASC)
);


GO
PRINT N'Creating [sec].[access_right]...';


GO
CREATE TABLE [sec].[access_right] (
    [id]            INT            NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          VARCHAR (128)  NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [comments]      NVARCHAR (MAX) NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_access_right_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [sec].[user_access_right]...';


GO
CREATE TABLE [sec].[user_access_right] (
    [user_id]         INT NOT NULL,
    [access_right_id] INT NOT NULL,
    CONSTRAINT [pk_user_access_right] PRIMARY KEY CLUSTERED ([user_id] ASC, [access_right_id] ASC)
);


GO
PRINT N'Creating [stock].[deal_type]...';


GO
CREATE TABLE [stock].[deal_type] (
    [id]    INT            NOT NULL,
    [name]  NVARCHAR (512) NOT NULL,
    [state] SMALLINT       NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[issue_type]...';


GO
CREATE TABLE [stock].[issue_type] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    [jsc]  BIT            NOT NULL,
    [llc]  BIT            NOT NULL,
    CONSTRAINT [pk_issue_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[stock_type]...';


GO
CREATE TABLE [stock].[stock_type] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (512) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[stock_class]...';


GO
CREATE TABLE [stock].[stock_class] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[share_type]...';


GO
CREATE TABLE [stock].[share_type] (
    [id]              INT             IDENTITY (1, 1) NOT NULL,
    [state]           SMALLINT        NOT NULL,
    [name]            NVARCHAR (256)  NOT NULL,
    [stock_type_id]   INT             NOT NULL,
    [stock_class_id]  INT             NULL,
    [votes_per_share] INT             NOT NULL,
    [face_value]      DECIMAL (26, 4) NOT NULL,
    [currency_id]     INT             NOT NULL,
    [modified_by]     INT             NOT NULL,
    [modified_date]   DATETIME2 (7)   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_share_type_all] UNIQUE NONCLUSTERED ([stock_type_id] ASC, [stock_class_id] ASC, [votes_per_share] ASC, [face_value] ASC, [currency_id] ASC)
);


GO
PRINT N'Creating [stock].[issue]...';


GO
CREATE TABLE [stock].[issue] (
    [id]                          INT             IDENTITY (1, 1) NOT NULL,
    [state]                       SMALLINT        NOT NULL,
    [issue_status_id]             INT             NOT NULL,
    [company_id]                  INT             NOT NULL,
    [issue_type_id]               INT             NOT NULL,
    [share_type_id]               INT             NOT NULL,
    [old_share_type_id]           INT             NULL,
    [declared_amount_integer]     BIGINT          NOT NULL,
    [declared_amount_numerator]   BIGINT          NOT NULL,
    [declared_amount_denominator] BIGINT          NOT NULL,
    [amount_integer]              BIGINT          NOT NULL,
    [amount_numerator]            BIGINT          NOT NULL,
    [amount_denominator]          BIGINT          NOT NULL,
    [offering_method_id]          INT             NULL,
    [offering_price]              DECIMAL (26, 4) NULL,
    [offering_currency_id]        INT             NULL,
    [shares_issue_code]           NVARCHAR (32)   NULL,
    [decision_date]               DATE            NOT NULL,
    [registration_date]           DATE            NULL,
    [report_date]                 DATE            NULL,
    [void_date]                   DATE            NULL,
    [operation_date]              DATE            NULL,
    [ratio]                       INT             NULL,
    [comments]                    NVARCHAR (MAX)  NULL,
    [modified_by]                 INT             NOT NULL,
    [modified_date]               DATETIME2 (7)   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[issue_request]...';


GO
CREATE TABLE [stock].[issue_request] (
    [id]                          INT             IDENTITY (1, 1) NOT NULL,
    [issue_id]                    INT             NULL,
    [request_id]                  INT             NOT NULL,
    [change_type_id]              CHAR (1)        NOT NULL,
    [state]                       SMALLINT        NOT NULL,
    [issue_status_id]             INT             NOT NULL,
    [company_id]                  INT             NOT NULL,
    [issue_type_id]               INT             NOT NULL,
    [share_type_id]               INT             NULL,
    [old_share_type_id]           INT             NULL,
    [declared_amount_integer]     BIGINT          NOT NULL,
    [declared_amount_numerator]   BIGINT          NOT NULL,
    [declared_amount_denominator] BIGINT          NOT NULL,
    [amount_integer]              BIGINT          NOT NULL,
    [amount_numerator]            BIGINT          NOT NULL,
    [amount_denominator]          BIGINT          NOT NULL,
    [offering_method_id]          INT             NULL,
    [offering_price]              DECIMAL (26, 4) NULL,
    [offering_currency_id]        INT             NULL,
    [shares_issue_code]           NVARCHAR (32)   NULL,
    [decision_date]               DATE            NOT NULL,
    [registration_date]           DATE            NULL,
    [report_date]                 DATE            NULL,
    [void_date]                   DATE            NULL,
    [operation_date]              DATE            NULL,
    [ratio]                       INT             NULL,
    [comments]                    NVARCHAR (MAX)  NULL,
    [modified_by]                 INT             NOT NULL,
    [modified_date]               DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_issue_request] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[offering_method]...';


GO
CREATE TABLE [stock].[offering_method] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [issue_type_id] INT            NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_offering_method] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[issue_status]...';


GO
CREATE TABLE [stock].[issue_status] (
    [id]   INT            NOT NULL,
    [name] NVARCHAR (512) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[deal]...';


GO
CREATE TABLE [stock].[deal] (
    [id]                 INT             IDENTITY (1, 1) NOT NULL,
    [state]              SMALLINT        NOT NULL,
    [deal_type_id]       INT             NOT NULL,
    [seller_id]          INT             NULL,
    [buyer_id]           INT             NULL,
    [issuer_id]          INT             NOT NULL,
    [issue_id]           INT             NULL,
    [share_type_id]      INT             NOT NULL,
    [amount_integer]     BIGINT          NOT NULL,
    [amount_numerator]   BIGINT          NOT NULL,
    [amount_denominator] BIGINT          NOT NULL,
    [value]              DECIMAL (22, 6) NULL,
    [currency_id]        INT             NULL,
    [change_hands_date]  DATE            NOT NULL,
    [contract_date]      DATE            NULL,
    [contract_number]    NVARCHAR (64)   NULL,
    [contract_name]      NVARCHAR (256)  NULL,
    [deal_date]          DATE            NOT NULL,
    [comments]           NVARCHAR (MAX)  NULL,
    [modified_by]        INT             NOT NULL,
    [modified_date]      DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_deal] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [stock].[deal_request]...';


GO
CREATE TABLE [stock].[deal_request] (
    [id]                 INT             IDENTITY (1, 1) NOT NULL,
    [deal_id]            INT             NULL,
    [request_id]         INT             NOT NULL,
    [change_type_id]     CHAR (1)        NOT NULL,
    [state]              SMALLINT        NOT NULL,
    [deal_type_id]       INT             NOT NULL,
    [seller_id]          INT             NULL,
    [buyer_id]           INT             NULL,
    [issuer_id]          INT             NULL,
    [issue_id]           INT             NULL,
    [share_type_id]      INT             NULL,
    [amount_integer]     BIGINT          NULL,
    [amount_numerator]   BIGINT          NULL,
    [amount_denominator] BIGINT          NULL,
    [value]              DECIMAL (22, 6) NULL,
    [currency_id]        INT             NULL,
    [change_hands_date]  DATE            NOT NULL,
    [contract_date]      DATE            NULL,
    [deal_date]          DATE            NOT NULL,
    [contract_number]    NVARCHAR (64)   NULL,
    [contract_name]      NVARCHAR (256)  NULL,
    [comments]           NVARCHAR (MAX)  NULL,
    [modified_by]        INT             NOT NULL,
    [modified_date]      DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_deal_request] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [metadata].[request_type]...';


GO
ALTER TABLE [metadata].[request_type]
    ADD DEFAULT ('Generic') FOR [access_right_code];


GO
PRINT N'Creating [acc].[fk_stock_investment_operation]...';


GO
ALTER TABLE [acc].[stock_investment]
    ADD CONSTRAINT [fk_stock_investment_operation] FOREIGN KEY ([operation_id]) REFERENCES [acc].[operation] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_investment_operation_part]...';


GO
ALTER TABLE [acc].[stock_investment]
    ADD CONSTRAINT [fk_stock_investment_operation_part] FOREIGN KEY ([operation_part_id]) REFERENCES [acc].[operation_part] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_investment_currency]...';


GO
ALTER TABLE [acc].[stock_investment]
    ADD CONSTRAINT [fk_stock_investment_currency] FOREIGN KEY ([currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_investment_shareholder]...';


GO
ALTER TABLE [acc].[stock_investment]
    ADD CONSTRAINT [fk_stock_investment_shareholder] FOREIGN KEY ([shareholder_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_investment_issuer]...';


GO
ALTER TABLE [acc].[stock_investment]
    ADD CONSTRAINT [fk_stock_investment_issuer] FOREIGN KEY ([issuer_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_investment_share_type]...';


GO
ALTER TABLE [acc].[stock_investment]
    ADD CONSTRAINT [fk_stock_investment_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [acc].[fk_authorized_capital_operation]...';


GO
ALTER TABLE [acc].[authorized_capital]
    ADD CONSTRAINT [fk_authorized_capital_operation] FOREIGN KEY ([operation_id]) REFERENCES [acc].[operation] ([id]);


GO
PRINT N'Creating [acc].[fk_authorized_capital_operation_part]...';


GO
ALTER TABLE [acc].[authorized_capital]
    ADD CONSTRAINT [fk_authorized_capital_operation_part] FOREIGN KEY ([operation_part_id]) REFERENCES [acc].[operation_part] ([id]);


GO
PRINT N'Creating [acc].[fk_authorized_capital_currency]...';


GO
ALTER TABLE [acc].[authorized_capital]
    ADD CONSTRAINT [fk_authorized_capital_currency] FOREIGN KEY ([currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [acc].[fk_authorized_capital_issuer]...';


GO
ALTER TABLE [acc].[authorized_capital]
    ADD CONSTRAINT [fk_authorized_capital_issuer] FOREIGN KEY ([issuer_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [acc].[fk_authorized_capital_issue]...';


GO
ALTER TABLE [acc].[authorized_capital]
    ADD CONSTRAINT [fk_authorized_capital_issue] FOREIGN KEY ([issue_id]) REFERENCES [stock].[issue] ([id]);


GO
PRINT N'Creating [acc].[fk_authorized_capital_share_type]...';


GO
ALTER TABLE [acc].[authorized_capital]
    ADD CONSTRAINT [fk_authorized_capital_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [acc].[fk_operation_document]...';


GO
ALTER TABLE [acc].[operation]
    ADD CONSTRAINT [fk_operation_document] FOREIGN KEY ([document_type_id], [document_id]) REFERENCES [core].[document] ([document_type_id], [id]);


GO
PRINT N'Creating [acc].[fk_operation_debit_account]...';


GO
ALTER TABLE [acc].[operation]
    ADD CONSTRAINT [fk_operation_debit_account] FOREIGN KEY ([debit_account_code]) REFERENCES [acc].[account] ([code]);


GO
PRINT N'Creating [acc].[fk_operation_credit_account]...';


GO
ALTER TABLE [acc].[operation]
    ADD CONSTRAINT [fk_operation_credit_account] FOREIGN KEY ([credit_account_code]) REFERENCES [acc].[account] ([code]);


GO
PRINT N'Creating [acc].[fk_treasury_stock_operation]...';


GO
ALTER TABLE [acc].[treasury_stock]
    ADD CONSTRAINT [fk_treasury_stock_operation] FOREIGN KEY ([operation_id]) REFERENCES [acc].[operation] ([id]);


GO
PRINT N'Creating [acc].[fk_treasury_stock_operation_part]...';


GO
ALTER TABLE [acc].[treasury_stock]
    ADD CONSTRAINT [fk_treasury_stock_operation_part] FOREIGN KEY ([operation_part_id]) REFERENCES [acc].[operation_part] ([id]);


GO
PRINT N'Creating [acc].[fk_treasury_stock_currency]...';


GO
ALTER TABLE [acc].[treasury_stock]
    ADD CONSTRAINT [fk_treasury_stock_currency] FOREIGN KEY ([currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [acc].[fk_treasury_stock_issuer]...';


GO
ALTER TABLE [acc].[treasury_stock]
    ADD CONSTRAINT [fk_treasury_stock_issuer] FOREIGN KEY ([issuer_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [acc].[fk_treasury_stock_share_type]...';


GO
ALTER TABLE [acc].[treasury_stock]
    ADD CONSTRAINT [fk_treasury_stock_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_transit_operation]...';


GO
ALTER TABLE [acc].[stock_transit]
    ADD CONSTRAINT [fk_stock_transit_operation] FOREIGN KEY ([operation_id]) REFERENCES [acc].[operation] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_transit_operation_part]...';


GO
ALTER TABLE [acc].[stock_transit]
    ADD CONSTRAINT [fk_stock_transit_operation_part] FOREIGN KEY ([operation_part_id]) REFERENCES [acc].[operation_part] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_transit_currency]...';


GO
ALTER TABLE [acc].[stock_transit]
    ADD CONSTRAINT [fk_stock_transit_currency] FOREIGN KEY ([currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_transit_shareholder]...';


GO
ALTER TABLE [acc].[stock_transit]
    ADD CONSTRAINT [fk_stock_transit_shareholder] FOREIGN KEY ([shareholder_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_transit_issuer]...';


GO
ALTER TABLE [acc].[stock_transit]
    ADD CONSTRAINT [fk_stock_transit_issuer] FOREIGN KEY ([issuer_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_transit_issue]...';


GO
ALTER TABLE [acc].[stock_transit]
    ADD CONSTRAINT [fk_stock_transit_issue] FOREIGN KEY ([issue_id]) REFERENCES [stock].[issue] ([id]);


GO
PRINT N'Creating [acc].[fk_stock_transit_share_type]...';


GO
ALTER TABLE [acc].[stock_transit]
    ADD CONSTRAINT [fk_stock_transit_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [biz].[fk_company_history_company]...';


GO
ALTER TABLE [biz].[company_history]
    ADD CONSTRAINT [fk_company_history_company] FOREIGN KEY ([company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [biz].[fk_company_history_legaladdress]...';


GO
ALTER TABLE [biz].[company_history]
    ADD CONSTRAINT [fk_company_history_legaladdress] FOREIGN KEY ([legal_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_company_history_mailaddress]...';


GO
ALTER TABLE [biz].[company_history]
    ADD CONSTRAINT [fk_company_history_mailaddress] FOREIGN KEY ([mail_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_company_history_actualaddress]...';


GO
ALTER TABLE [biz].[company_history]
    ADD CONSTRAINT [fk_company_history_actualaddress] FOREIGN KEY ([actual_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_company_history_company_okved]...';


GO
ALTER TABLE [biz].[company_history]
    ADD CONSTRAINT [fk_company_history_company_okved] FOREIGN KEY ([company_okved_id]) REFERENCES [biz].[company_okved] ([id]);


GO
PRINT N'Creating [biz].[fk_company_history_business_entity_history]...';


GO
ALTER TABLE [biz].[company_history]
    ADD CONSTRAINT [fk_company_history_business_entity_history] FOREIGN KEY ([hid]) REFERENCES [biz].[business_entity_history] ([hid]);


GO
PRINT N'Creating [biz].[fk_company_history_okopf]...';


GO
ALTER TABLE [biz].[company_history]
    ADD CONSTRAINT [fk_company_history_okopf] FOREIGN KEY ([okopf_id]) REFERENCES [dic].[okopf] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_history_document_type]...';


GO
ALTER TABLE [biz].[business_entity_history]
    ADD CONSTRAINT [fk_business_entity_history_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_history]...';


GO
ALTER TABLE [biz].[business_entity_history]
    ADD CONSTRAINT [fk_business_entity_history] FOREIGN KEY ([business_entity_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_history_legal_address]...';


GO
ALTER TABLE [biz].[business_entity_history]
    ADD CONSTRAINT [fk_business_entity_history_legal_address] FOREIGN KEY ([legal_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_history_mail_address]...';


GO
ALTER TABLE [biz].[business_entity_history]
    ADD CONSTRAINT [fk_business_entity_history_mail_address] FOREIGN KEY ([mail_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_history_actual_address]...';


GO
ALTER TABLE [biz].[business_entity_history]
    ADD CONSTRAINT [fk_business_entity_history_actual_address] FOREIGN KEY ([actual_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_document_type]...';


GO
ALTER TABLE [biz].[business_entity]
    ADD CONSTRAINT [fk_business_entity_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_country]...';


GO
ALTER TABLE [biz].[business_entity]
    ADD CONSTRAINT [fk_business_entity_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_history_legaladdress]...';


GO
ALTER TABLE [biz].[subdivision_history]
    ADD CONSTRAINT [fk_subdivision_history_legaladdress] FOREIGN KEY ([legal_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_history_mailaddress]...';


GO
ALTER TABLE [biz].[subdivision_history]
    ADD CONSTRAINT [fk_subdivision_history_mailaddress] FOREIGN KEY ([mail_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_history_actualaddress]...';


GO
ALTER TABLE [biz].[subdivision_history]
    ADD CONSTRAINT [fk_subdivision_history_actualaddress] FOREIGN KEY ([actual_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_history_executive_person]...';


GO
ALTER TABLE [biz].[subdivision_history]
    ADD CONSTRAINT [fk_subdivision_history_executive_person] FOREIGN KEY ([executive_person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_history_business_entity_history]...';


GO
ALTER TABLE [biz].[subdivision_history]
    ADD CONSTRAINT [fk_subdivision_history_business_entity_history] FOREIGN KEY ([hid]) REFERENCES [biz].[business_entity_history] ([hid]);


GO
PRINT N'Creating [biz].[fk_subdivision_history_subdivision]...';


GO
ALTER TABLE [biz].[subdivision_history]
    ADD CONSTRAINT [fk_subdivision_history_subdivision] FOREIGN KEY ([subdivision_id]) REFERENCES [biz].[subdivision] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_subdivision_type]...';


GO
ALTER TABLE [biz].[subdivision]
    ADD CONSTRAINT [fk_subdivision_subdivision_type] FOREIGN KEY ([subdivision_type_id]) REFERENCES [biz].[subdivision_type] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_country]...';


GO
ALTER TABLE [biz].[subdivision]
    ADD CONSTRAINT [fk_subdivision_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_parent_company]...';


GO
ALTER TABLE [biz].[subdivision]
    ADD CONSTRAINT [fk_subdivision_parent_company] FOREIGN KEY ([parent_company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_business_entity]...';


GO
ALTER TABLE [biz].[subdivision]
    ADD CONSTRAINT [fk_subdivision_business_entity] FOREIGN KEY ([id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_address_country]...';


GO
ALTER TABLE [biz].[address]
    ADD CONSTRAINT [fk_address_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_role_business_entity]...';


GO
ALTER TABLE [biz].[business_entity_role]
    ADD CONSTRAINT [fk_business_entity_role_business_entity] FOREIGN KEY ([business_entity_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_business_entity_role_business_role]...';


GO
ALTER TABLE [biz].[business_entity_role]
    ADD CONSTRAINT [fk_business_entity_role_business_role] FOREIGN KEY ([business_role_id]) REFERENCES [biz].[business_role] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_member_board_request]...';


GO
ALTER TABLE [biz].[board_request_member]
    ADD CONSTRAINT [fk_board_request_member_board_request] FOREIGN KEY ([board_request_id]) REFERENCES [biz].[board_request] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_member_business_entity]...';


GO
ALTER TABLE [biz].[board_request_member]
    ADD CONSTRAINT [fk_board_request_member_business_entity] FOREIGN KEY ([business_entity_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_member_position]...';


GO
ALTER TABLE [biz].[board_request_member]
    ADD CONSTRAINT [fk_board_request_member_position] FOREIGN KEY ([position_id]) REFERENCES [biz].[position] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_board]...';


GO
ALTER TABLE [biz].[board_request]
    ADD CONSTRAINT [fk_board_request_board] FOREIGN KEY ([board_id]) REFERENCES [biz].[board] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_board_history]...';


GO
ALTER TABLE [biz].[board_request]
    ADD CONSTRAINT [fk_board_request_board_history] FOREIGN KEY ([board_hid]) REFERENCES [biz].[board_history] ([hid]);


GO
PRINT N'Creating [biz].[fk_board_request_request]...';


GO
ALTER TABLE [biz].[board_request]
    ADD CONSTRAINT [fk_board_request_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_change_type]...';


GO
ALTER TABLE [biz].[board_request]
    ADD CONSTRAINT [fk_board_request_change_type] FOREIGN KEY ([change_type_id]) REFERENCES [metadata].[change_type] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_company]...';


GO
ALTER TABLE [biz].[board_request]
    ADD CONSTRAINT [fk_board_request_company] FOREIGN KEY ([company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_board_type]...';


GO
ALTER TABLE [biz].[board_request]
    ADD CONSTRAINT [fk_board_request_board_type] FOREIGN KEY ([board_type_id]) REFERENCES [biz].[board_type] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_secretary_person]...';


GO
ALTER TABLE [biz].[board_request]
    ADD CONSTRAINT [fk_board_request_secretary_person] FOREIGN KEY ([secretary_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [biz].[fk_board_member_promoter_board_member]...';


GO
ALTER TABLE [biz].[board_member_promoter]
    ADD CONSTRAINT [fk_board_member_promoter_board_member] FOREIGN KEY ([board_member_id]) REFERENCES [biz].[board_member] ([id]);


GO
PRINT N'Creating [biz].[fk_board_member_promoter_business_entity]...';


GO
ALTER TABLE [biz].[board_member_promoter]
    ADD CONSTRAINT [fk_board_member_promoter_business_entity] FOREIGN KEY ([business_entity_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_board_member_board_history]...';


GO
ALTER TABLE [biz].[board_member]
    ADD CONSTRAINT [fk_board_member_board_history] FOREIGN KEY ([board_hid]) REFERENCES [biz].[board_history] ([hid]);


GO
PRINT N'Creating [biz].[fk_board_member_business_entity]...';


GO
ALTER TABLE [biz].[board_member]
    ADD CONSTRAINT [fk_board_member_business_entity] FOREIGN KEY ([business_entity_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_board_member_position]...';


GO
ALTER TABLE [biz].[board_member]
    ADD CONSTRAINT [fk_board_member_position] FOREIGN KEY ([position_id]) REFERENCES [biz].[position] ([id]);


GO
PRINT N'Creating [biz].[fk_board_history_board]...';


GO
ALTER TABLE [biz].[board_history]
    ADD CONSTRAINT [fk_board_history_board] FOREIGN KEY ([board_id]) REFERENCES [biz].[board] ([id]);


GO
PRINT N'Creating [biz].[fk_board_history_secretary_person]...';


GO
ALTER TABLE [biz].[board_history]
    ADD CONSTRAINT [fk_board_history_secretary_person] FOREIGN KEY ([secretary_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [biz].[fk_board_company]...';


GO
ALTER TABLE [biz].[board]
    ADD CONSTRAINT [fk_board_company] FOREIGN KEY ([company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [biz].[fk_board_board_type]...';


GO
ALTER TABLE [biz].[board]
    ADD CONSTRAINT [fk_board_board_type] FOREIGN KEY ([board_type_id]) REFERENCES [biz].[board_type] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_change_type]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_change_type] FOREIGN KEY ([change_type_id]) REFERENCES [metadata].[change_type] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_request]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_subdivision]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_subdivision] FOREIGN KEY ([subdivision_id]) REFERENCES [biz].[subdivision] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_subdivision_history]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_subdivision_history] FOREIGN KEY ([subdivision_hid]) REFERENCES [biz].[subdivision_history] ([hid]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_subdivision_type]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_subdivision_type] FOREIGN KEY ([subdivision_type_id]) REFERENCES [biz].[subdivision_type] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_country]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_parent_company]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_parent_company] FOREIGN KEY ([parent_company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_legaladdress]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_legaladdress] FOREIGN KEY ([legal_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_mailaddress]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_mailaddress] FOREIGN KEY ([mail_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_actualaddress]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_actualaddress] FOREIGN KEY ([actual_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_subdivision_request_executive_person]...';


GO
ALTER TABLE [biz].[subdivision_request]
    ADD CONSTRAINT [fk_subdivision_request_executive_person] FOREIGN KEY ([executive_person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [biz].[fk_document_state_global_document_state]...';


GO
ALTER TABLE [biz].[document_state_global]
    ADD CONSTRAINT [fk_document_state_global_document_state] FOREIGN KEY ([document_state_id]) REFERENCES [metadata].[document_state] ([id]);


GO
PRINT N'Creating [biz].[fk_company_okved_item_company_okved]...';


GO
ALTER TABLE [biz].[company_okved_item]
    ADD CONSTRAINT [fk_company_okved_item_company_okved] FOREIGN KEY ([company_okved_id]) REFERENCES [biz].[company_okved] ([id]);


GO
PRINT N'Creating [biz].[fk_company_okved_item_okved]...';


GO
ALTER TABLE [biz].[company_okved_item]
    ADD CONSTRAINT [fk_company_okved_item_okved] FOREIGN KEY ([okved_id]) REFERENCES [dic].[okved] ([id]);


GO
PRINT N'Creating [biz].[fk_reorganization_item_reorganization]...';


GO
ALTER TABLE [biz].[reorganization_item]
    ADD CONSTRAINT [fk_reorganization_item_reorganization] FOREIGN KEY ([reorganization_id]) REFERENCES [biz].[reorganization] ([id]);


GO
PRINT N'Creating [biz].[fk_reorganization_item_reorganization_type]...';


GO
ALTER TABLE [biz].[reorganization_item]
    ADD CONSTRAINT [fk_reorganization_item_reorganization_type] FOREIGN KEY ([reorganization_type_id]) REFERENCES [biz].[reorganization_type] ([id]);


GO
PRINT N'Creating [biz].[fk_reorganization_item_assignee_company_company]...';


GO
ALTER TABLE [biz].[reorganization_item]
    ADD CONSTRAINT [fk_reorganization_item_assignee_company_company] FOREIGN KEY ([assignee_company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_member_promoter_board_request_member]...';


GO
ALTER TABLE [biz].[board_request_member_promoter]
    ADD CONSTRAINT [fk_board_request_member_promoter_board_request_member] FOREIGN KEY ([board_request_member_id]) REFERENCES [biz].[board_request_member] ([id]);


GO
PRINT N'Creating [biz].[fk_board_request_member_promoter_business_entity]...';


GO
ALTER TABLE [biz].[board_request_member_promoter]
    ADD CONSTRAINT [fk_board_request_member_promoter_business_entity] FOREIGN KEY ([business_entity_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_change_type]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_change_type] FOREIGN KEY ([change_type_id]) REFERENCES [metadata].[change_type] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_request]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_company]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_company] FOREIGN KEY ([company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_company_history]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_company_history] FOREIGN KEY ([company_hid]) REFERENCES [biz].[company_history] ([hid]);


GO
PRINT N'Creating [biz].[fk_company_request_legaladdress]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_legaladdress] FOREIGN KEY ([legal_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_mailaddress]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_mailaddress] FOREIGN KEY ([mail_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_actualaddress]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_actualaddress] FOREIGN KEY ([actual_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_company_okved]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_company_okved] FOREIGN KEY ([company_okved_id]) REFERENCES [biz].[company_okved] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_country]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_company_setup_type]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_company_setup_type] FOREIGN KEY ([company_setup_type_id]) REFERENCES [biz].[company_setup_type] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_currency]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_currency] FOREIGN KEY ([base_currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_okopf]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_okopf] FOREIGN KEY ([okopf_id]) REFERENCES [dic].[okopf] ([id]);


GO
PRINT N'Creating [biz].[fk_company_request_reorganization]...';


GO
ALTER TABLE [biz].[company_request]
    ADD CONSTRAINT [fk_company_request_reorganization] FOREIGN KEY ([reorganization_id]) REFERENCES [biz].[reorganization] ([id]);


GO
PRINT N'Creating [biz].[fk_company_country]...';


GO
ALTER TABLE [biz].[company]
    ADD CONSTRAINT [fk_company_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [biz].[fk_company_company_setup_type]...';


GO
ALTER TABLE [biz].[company]
    ADD CONSTRAINT [fk_company_company_setup_type] FOREIGN KEY ([company_setup_type_id]) REFERENCES [biz].[company_setup_type] ([id]);


GO
PRINT N'Creating [biz].[fk_company_business_entity]...';


GO
ALTER TABLE [biz].[company]
    ADD CONSTRAINT [fk_company_business_entity] FOREIGN KEY ([id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [biz].[fk_company_currency]...';


GO
ALTER TABLE [biz].[company]
    ADD CONSTRAINT [fk_company_currency] FOREIGN KEY ([base_currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [biz].[fk_company_reorganization]...';


GO
ALTER TABLE [biz].[company]
    ADD CONSTRAINT [fk_company_reorganization] FOREIGN KEY ([reorganization_id]) REFERENCES [biz].[reorganization] ([id]);


GO
PRINT N'Creating [core].[fk_property_document]...';


GO
ALTER TABLE [core].[property_value]
    ADD CONSTRAINT [fk_property_document] FOREIGN KEY ([document_type_id], [document_id]) REFERENCES [core].[document] ([document_type_id], [id]);


GO
PRINT N'Creating [core].[fk_property_value_property]...';


GO
ALTER TABLE [core].[property_value]
    ADD CONSTRAINT [fk_property_value_property] FOREIGN KEY ([document_type_id], [property_id]) REFERENCES [metadata].[property] ([document_type_id], [id]);


GO
PRINT N'Creating [core].[FK_document_transition_document_state_from]...';


GO
ALTER TABLE [core].[document_transition]
    ADD CONSTRAINT [FK_document_transition_document_state_from] FOREIGN KEY ([document_type_id], [from_state]) REFERENCES [metadata].[document_state] ([document_type_id], [value]);


GO
PRINT N'Creating [core].[FK_document_transition_document_state_to]...';


GO
ALTER TABLE [core].[document_transition]
    ADD CONSTRAINT [FK_document_transition_document_state_to] FOREIGN KEY ([document_type_id], [to_state]) REFERENCES [metadata].[document_state] ([document_type_id], [value]);


GO
PRINT N'Creating [core].[fk_document_document_type]...';


GO
ALTER TABLE [core].[document]
    ADD CONSTRAINT [fk_document_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [core].[fk_document_history_document]...';


GO
ALTER TABLE [core].[document_history]
    ADD CONSTRAINT [fk_document_history_document] FOREIGN KEY ([document_type_id], [document_id]) REFERENCES [core].[document] ([document_type_id], [id]);


GO
PRINT N'Creating [core].[fk_document_history_document_type]...';


GO
ALTER TABLE [core].[document_history]
    ADD CONSTRAINT [fk_document_history_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [core].[fk_external_link_document]...';


GO
ALTER TABLE [core].[external_link]
    ADD CONSTRAINT [fk_external_link_document] FOREIGN KEY ([document_type_id], [document_id]) REFERENCES [core].[document] ([document_type_id], [id]);


GO
PRINT N'Creating [core].[fk_external_link_document_type]...';


GO
ALTER TABLE [core].[external_link]
    ADD CONSTRAINT [fk_external_link_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [core].[fk_hierarchy_document_hierarchy]...';


GO
ALTER TABLE [core].[hierarchy_document]
    ADD CONSTRAINT [fk_hierarchy_document_hierarchy] FOREIGN KEY ([hierarchy_id]) REFERENCES [core].[hierarchy] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [core].[fk_hierarchy_document_document]...';


GO
ALTER TABLE [core].[hierarchy_document]
    ADD CONSTRAINT [fk_hierarchy_document_document] FOREIGN KEY ([document_type_id], [document_id]) REFERENCES [core].[document] ([document_type_id], [id]);


GO
PRINT N'Creating [core].[fk_hierarchy_document_document_type]...';


GO
ALTER TABLE [core].[hierarchy_document]
    ADD CONSTRAINT [fk_hierarchy_document_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [core].[fk_hierarchy_access_right]...';


GO
ALTER TABLE [core].[hierarchy]
    ADD CONSTRAINT [fk_hierarchy_access_right] FOREIGN KEY ([access_right_id]) REFERENCES [sec].[access_right] ([id]);


GO
PRINT N'Creating [dic].[fk_currency_rate_from_currency]...';


GO
ALTER TABLE [dic].[currency_rate]
    ADD CONSTRAINT [fk_currency_rate_from_currency] FOREIGN KEY ([from_currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [dic].[fk_currency_rate_to_currency]...';


GO
ALTER TABLE [dic].[currency_rate]
    ADD CONSTRAINT [fk_currency_rate_to_currency] FOREIGN KEY ([to_currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [dic].[fk_unit_measure_uom_section]...';


GO
ALTER TABLE [dic].[unit_measure]
    ADD CONSTRAINT [fk_unit_measure_uom_section] FOREIGN KEY ([section]) REFERENCES [dic].[unit_measure_section] ([code]);


GO
PRINT N'Creating [dic].[fk_uomc_from_uom]...';


GO
ALTER TABLE [dic].[unit_measure_conversion]
    ADD CONSTRAINT [fk_uomc_from_uom] FOREIGN KEY ([from_unit_measure_id]) REFERENCES [dic].[unit_measure] ([id]);


GO
PRINT N'Creating [dic].[fk_uomc_to_uom]...';


GO
ALTER TABLE [dic].[unit_measure_conversion]
    ADD CONSTRAINT [fk_uomc_to_uom] FOREIGN KEY ([to_unit_measure_id]) REFERENCES [dic].[unit_measure] ([id]);


GO
PRINT N'Creating [metadata].[fk_transition_from_state]...';


GO
ALTER TABLE [metadata].[transition_template]
    ADD CONSTRAINT [fk_transition_from_state] FOREIGN KEY ([document_type_id], [from_state]) REFERENCES [metadata].[document_state] ([document_type_id], [value]);


GO
PRINT N'Creating [metadata].[fk_transition_to_state]...';


GO
ALTER TABLE [metadata].[transition_template]
    ADD CONSTRAINT [fk_transition_to_state] FOREIGN KEY ([document_type_id], [to_state]) REFERENCES [metadata].[document_state] ([document_type_id], [value]);


GO
PRINT N'Creating [metadata].[fk_transition_access_right]...';


GO
ALTER TABLE [metadata].[transition_template]
    ADD CONSTRAINT [fk_transition_access_right] FOREIGN KEY ([access_right_id]) REFERENCES [sec].[access_right] ([id]);


GO
PRINT N'Creating [metadata].[FK_document_state_document_type]...';


GO
ALTER TABLE [metadata].[document_state]
    ADD CONSTRAINT [FK_document_state_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_property_document_type]...';


GO
ALTER TABLE [metadata].[property]
    ADD CONSTRAINT [fk_property_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_property_property_type]...';


GO
ALTER TABLE [metadata].[property]
    ADD CONSTRAINT [fk_property_property_type] FOREIGN KEY ([property_type_id]) REFERENCES [metadata].[property_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_property_definition_global_property_definition]...';


GO
ALTER TABLE [metadata].[property_definition_global]
    ADD CONSTRAINT [fk_property_definition_global_property_definition] FOREIGN KEY ([property_definition_id]) REFERENCES [metadata].[property_definition] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_type_global_request_type]...';


GO
ALTER TABLE [metadata].[request_type_global]
    ADD CONSTRAINT [fk_request_type_global_request_type] FOREIGN KEY ([request_type_id]) REFERENCES [metadata].[request_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_document_type_global_document_type]...';


GO
ALTER TABLE [metadata].[document_type_global]
    ADD CONSTRAINT [fk_document_type_global_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_transition_template_request_type]...';


GO
ALTER TABLE [metadata].[request_transition_template]
    ADD CONSTRAINT [fk_request_transition_template_request_type] FOREIGN KEY ([request_type_id]) REFERENCES [metadata].[request_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_transition_template_access_right]...';


GO
ALTER TABLE [metadata].[request_transition_template]
    ADD CONSTRAINT [fk_request_transition_template_access_right] FOREIGN KEY ([access_right_code]) REFERENCES [sec].[access_right] ([code]);


GO
PRINT N'Creating [metadata].[fk_property_definition_document_type]...';


GO
ALTER TABLE [metadata].[property_definition]
    ADD CONSTRAINT [fk_property_definition_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_type_access_right]...';


GO
ALTER TABLE [metadata].[request_type]
    ADD CONSTRAINT [fk_request_type_access_right] FOREIGN KEY ([access_right_code]) REFERENCES [sec].[access_right] ([code]);


GO
PRINT N'Creating [metadata].[fk_request_type_data_operation_type]...';


GO
ALTER TABLE [metadata].[request_type]
    ADD CONSTRAINT [fk_request_type_data_operation_type] FOREIGN KEY ([data_operation_type_id]) REFERENCES [metadata].[data_operation_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_type_document_type]...';


GO
ALTER TABLE [metadata].[request_type]
    ADD CONSTRAINT [fk_request_type_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_type_view_type]...';


GO
ALTER TABLE [metadata].[request_type]
    ADD CONSTRAINT [fk_request_type_view_type] FOREIGN KEY ([view_type]) REFERENCES [presentation].[view_type] ([code]);


GO
PRINT N'Creating [person].[fk_person_request_change_type]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_change_type] FOREIGN KEY ([change_type_id]) REFERENCES [metadata].[change_type] ([id]);


GO
PRINT N'Creating [person].[fk_person_request_request]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [person].[fk_person_request_person]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_person] FOREIGN KEY ([person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [person].[fk_person_request_person_history]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_person_history] FOREIGN KEY ([person_hid]) REFERENCES [person].[person_history] ([hid]);


GO
PRINT N'Creating [person].[fk_person_request_legaladdress]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_legaladdress] FOREIGN KEY ([legal_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [person].[fk_person_request_mailaddress]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_mailaddress] FOREIGN KEY ([mail_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [person].[fk_person_request_actualaddress]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_actualaddress] FOREIGN KEY ([actual_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [person].[fk_person_request_country]...';


GO
ALTER TABLE [person].[person_request]
    ADD CONSTRAINT [fk_person_request_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_request_person]...';


GO
ALTER TABLE [person].[person_relation_request]
    ADD CONSTRAINT [fk_person_relation_request_person] FOREIGN KEY ([person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_request_relative_person]...';


GO
ALTER TABLE [person].[person_relation_request]
    ADD CONSTRAINT [fk_person_relation_request_relative_person] FOREIGN KEY ([relative_person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_request_relation_type]...';


GO
ALTER TABLE [person].[person_relation_request]
    ADD CONSTRAINT [fk_person_relation_request_relation_type] FOREIGN KEY ([relation_type_id]) REFERENCES [person].[relation_type] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_request_person_relation]...';


GO
ALTER TABLE [person].[person_relation_request]
    ADD CONSTRAINT [fk_person_relation_request_person_relation] FOREIGN KEY ([person_relation_id]) REFERENCES [person].[person_relation] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_request_request]...';


GO
ALTER TABLE [person].[person_relation_request]
    ADD CONSTRAINT [fk_person_relation_request_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_person]...';


GO
ALTER TABLE [person].[person_relation]
    ADD CONSTRAINT [fk_person_relation_person] FOREIGN KEY ([person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_relative_person]...';


GO
ALTER TABLE [person].[person_relation]
    ADD CONSTRAINT [fk_person_relation_relative_person] FOREIGN KEY ([relative_person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [person].[fk_person_relation_relation_type]...';


GO
ALTER TABLE [person].[person_relation]
    ADD CONSTRAINT [fk_person_relation_relation_type] FOREIGN KEY ([relation_type_id]) REFERENCES [person].[relation_type] ([id]);


GO
PRINT N'Creating [person].[fk_person_history_person]...';


GO
ALTER TABLE [person].[person_history]
    ADD CONSTRAINT [fk_person_history_person] FOREIGN KEY ([person_id]) REFERENCES [person].[person] ([id]);


GO
PRINT N'Creating [person].[fk_person_history_business_entity_history]...';


GO
ALTER TABLE [person].[person_history]
    ADD CONSTRAINT [fk_person_history_business_entity_history] FOREIGN KEY ([hid]) REFERENCES [biz].[business_entity_history] ([hid]);


GO
PRINT N'Creating [person].[fk_person_history_legaladdress]...';


GO
ALTER TABLE [person].[person_history]
    ADD CONSTRAINT [fk_person_history_legaladdress] FOREIGN KEY ([legal_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [person].[fk_person_history_mailaddress]...';


GO
ALTER TABLE [person].[person_history]
    ADD CONSTRAINT [fk_person_history_mailaddress] FOREIGN KEY ([mail_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [person].[fk_person_history_actualaddress]...';


GO
ALTER TABLE [person].[person_history]
    ADD CONSTRAINT [fk_person_history_actualaddress] FOREIGN KEY ([actual_address_id]) REFERENCES [biz].[address] ([id]);


GO
PRINT N'Creating [person].[fk_person_country]...';


GO
ALTER TABLE [person].[person]
    ADD CONSTRAINT [fk_person_country] FOREIGN KEY ([country_id]) REFERENCES [dic].[country] ([id]);


GO
PRINT N'Creating [person].[fk_person_business_entity]...';


GO
ALTER TABLE [person].[person]
    ADD CONSTRAINT [fk_person_business_entity] FOREIGN KEY ([id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [presentation].[fk_command_global_command]...';


GO
ALTER TABLE [presentation].[command_global]
    ADD CONSTRAINT [fk_command_global_command] FOREIGN KEY ([command_id]) REFERENCES [presentation].[command] ([id]);


GO
PRINT N'Creating [presentation].[fk_node_global_node]...';


GO
ALTER TABLE [presentation].[node_global]
    ADD CONSTRAINT [fk_node_global_node] FOREIGN KEY ([node_id]) REFERENCES [presentation].[node] ([id]);


GO
PRINT N'Creating [presentation].[fk_node_node_type]...';


GO
ALTER TABLE [presentation].[node]
    ADD CONSTRAINT [fk_node_node_type] FOREIGN KEY ([node_type_id]) REFERENCES [presentation].[node_type] ([id]);


GO
PRINT N'Creating [presentation].[fk_node_request_type]...';


GO
ALTER TABLE [presentation].[node]
    ADD CONSTRAINT [fk_node_request_type] FOREIGN KEY ([request_type_code]) REFERENCES [metadata].[request_type] ([code]);


GO
PRINT N'Creating [profile].[fk_parameter_default_parameter]...';


GO
ALTER TABLE [profile].[parameter]
    ADD CONSTRAINT [fk_parameter_default_parameter] FOREIGN KEY ([parameter_code]) REFERENCES [profile].[default_parameter] ([code]);


GO
PRINT N'Creating [req].[fk_request_transition_request]...';


GO
ALTER TABLE [req].[request_transition]
    ADD CONSTRAINT [fk_request_transition_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [req].[fk_request_request_type]...';


GO
ALTER TABLE [req].[request]
    ADD CONSTRAINT [fk_request_request_type] FOREIGN KEY ([request_type_id]) REFERENCES [metadata].[request_type] ([id]);


GO
PRINT N'Creating [req].[fk_request_document]...';


GO
ALTER TABLE [req].[request]
    ADD CONSTRAINT [fk_request_document] FOREIGN KEY ([document_type_id], [document_id]) REFERENCES [core].[document] ([document_type_id], [id]);


GO
PRINT N'Creating [req].[fk_request_document_history]...';


GO
ALTER TABLE [req].[request]
    ADD CONSTRAINT [fk_request_document_history] FOREIGN KEY ([document_type_id], [document_hid]) REFERENCES [core].[document_history] ([document_type_id], [hid]);


GO
PRINT N'Creating [req].[fk_request_data_operation_type]...';


GO
ALTER TABLE [req].[request]
    ADD CONSTRAINT [fk_request_data_operation_type] FOREIGN KEY ([data_operation_type_id]) REFERENCES [metadata].[data_operation_type] ([id]);


GO
PRINT N'Creating [sec].[fk_user_role_user]...';


GO
ALTER TABLE [sec].[user_role]
    ADD CONSTRAINT [fk_user_role_user] FOREIGN KEY ([user_id]) REFERENCES [sec].[user] ([id]);


GO
PRINT N'Creating [sec].[fk_user_role_role]...';


GO
ALTER TABLE [sec].[user_role]
    ADD CONSTRAINT [fk_user_role_role] FOREIGN KEY ([role_id]) REFERENCES [sec].[role] ([id]);


GO
PRINT N'Creating [sec].[fk_role_access_right_role]...';


GO
ALTER TABLE [sec].[role_access_right]
    ADD CONSTRAINT [fk_role_access_right_role] FOREIGN KEY ([role_id]) REFERENCES [sec].[role] ([id]);


GO
PRINT N'Creating [sec].[fk_role_access_right_access_right]...';


GO
ALTER TABLE [sec].[role_access_right]
    ADD CONSTRAINT [fk_role_access_right_access_right] FOREIGN KEY ([access_right_id]) REFERENCES [sec].[access_right] ([id]);


GO
PRINT N'Creating [sec].[fk_user_access_right_user]...';


GO
ALTER TABLE [sec].[user_access_right]
    ADD CONSTRAINT [fk_user_access_right_user] FOREIGN KEY ([user_id]) REFERENCES [sec].[user] ([id]);


GO
PRINT N'Creating [sec].[fk_user_access_right_access_right]...';


GO
ALTER TABLE [sec].[user_access_right]
    ADD CONSTRAINT [fk_user_access_right_access_right] FOREIGN KEY ([access_right_id]) REFERENCES [sec].[access_right] ([id]);


GO
PRINT N'Creating [stock].[fk_capital_type_currency]...';


GO
ALTER TABLE [stock].[share_type]
    ADD CONSTRAINT [fk_capital_type_currency] FOREIGN KEY ([currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [stock].[fk_share_type_stock_type]...';


GO
ALTER TABLE [stock].[share_type]
    ADD CONSTRAINT [fk_share_type_stock_type] FOREIGN KEY ([stock_type_id]) REFERENCES [stock].[stock_type] ([id]);


GO
PRINT N'Creating [stock].[fk_share_type_stock_class]...';


GO
ALTER TABLE [stock].[share_type]
    ADD CONSTRAINT [fk_share_type_stock_class] FOREIGN KEY ([stock_class_id]) REFERENCES [stock].[stock_class] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_issue_type]...';


GO
ALTER TABLE [stock].[issue]
    ADD CONSTRAINT [fk_issue_issue_type] FOREIGN KEY ([issue_type_id]) REFERENCES [stock].[issue_type] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_share_type]...';


GO
ALTER TABLE [stock].[issue]
    ADD CONSTRAINT [fk_issue_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_old_share_type]...';


GO
ALTER TABLE [stock].[issue]
    ADD CONSTRAINT [fk_issue_old_share_type] FOREIGN KEY ([old_share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_offering_currency]...';


GO
ALTER TABLE [stock].[issue]
    ADD CONSTRAINT [fk_issue_offering_currency] FOREIGN KEY ([offering_currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_issue_status]...';


GO
ALTER TABLE [stock].[issue]
    ADD CONSTRAINT [fk_issue_issue_status] FOREIGN KEY ([issue_status_id]) REFERENCES [stock].[issue_status] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_company]...';


GO
ALTER TABLE [stock].[issue]
    ADD CONSTRAINT [fk_issue_company] FOREIGN KEY ([company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_offering_method]...';


GO
ALTER TABLE [stock].[issue]
    ADD CONSTRAINT [fk_issue_offering_method] FOREIGN KEY ([offering_method_id]) REFERENCES [stock].[offering_method] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_change_type]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_change_type] FOREIGN KEY ([change_type_id]) REFERENCES [metadata].[change_type] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_request]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_issue]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_issue] FOREIGN KEY ([issue_id]) REFERENCES [stock].[issue] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_issue_type]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_issue_type] FOREIGN KEY ([issue_type_id]) REFERENCES [stock].[issue_type] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_share_type]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_old_share_type]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_old_share_type] FOREIGN KEY ([old_share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_offering_currency]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_offering_currency] FOREIGN KEY ([offering_currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_issue_status]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_issue_status] FOREIGN KEY ([issue_status_id]) REFERENCES [stock].[issue_status] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_company]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_company] FOREIGN KEY ([company_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [stock].[fk_issue_request_offering_method]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CONSTRAINT [fk_issue_request_offering_method] FOREIGN KEY ([offering_method_id]) REFERENCES [stock].[offering_method] ([id]);


GO
PRINT N'Creating [stock].[fk_offering_method_issue_type]...';


GO
ALTER TABLE [stock].[offering_method]
    ADD CONSTRAINT [fk_offering_method_issue_type] FOREIGN KEY ([issue_type_id]) REFERENCES [stock].[issue_type] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_deal_type]...';


GO
ALTER TABLE [stock].[deal]
    ADD CONSTRAINT [fk_deal_deal_type] FOREIGN KEY ([deal_type_id]) REFERENCES [stock].[deal_type] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_seller]...';


GO
ALTER TABLE [stock].[deal]
    ADD CONSTRAINT [fk_deal_seller] FOREIGN KEY ([seller_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_buyer]...';


GO
ALTER TABLE [stock].[deal]
    ADD CONSTRAINT [fk_deal_buyer] FOREIGN KEY ([buyer_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_issuer]...';


GO
ALTER TABLE [stock].[deal]
    ADD CONSTRAINT [fk_deal_issuer] FOREIGN KEY ([issuer_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_issue]...';


GO
ALTER TABLE [stock].[deal]
    ADD CONSTRAINT [fk_deal_issue] FOREIGN KEY ([issue_id]) REFERENCES [stock].[issue] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_share_type]...';


GO
ALTER TABLE [stock].[deal]
    ADD CONSTRAINT [fk_deal_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_currency]...';


GO
ALTER TABLE [stock].[deal]
    ADD CONSTRAINT [fk_deal_currency] FOREIGN KEY ([currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_change_type]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_change_type] FOREIGN KEY ([change_type_id]) REFERENCES [metadata].[change_type] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_request]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_request] FOREIGN KEY ([request_id]) REFERENCES [req].[request] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_deal]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_deal] FOREIGN KEY ([deal_id]) REFERENCES [stock].[deal] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_deal_type]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_deal_type] FOREIGN KEY ([deal_type_id]) REFERENCES [stock].[deal_type] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_seller]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_seller] FOREIGN KEY ([seller_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_buyer]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_buyer] FOREIGN KEY ([buyer_id]) REFERENCES [biz].[business_entity] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_issuer]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_issuer] FOREIGN KEY ([issuer_id]) REFERENCES [biz].[company] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_issue]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_issue] FOREIGN KEY ([issue_id]) REFERENCES [stock].[issue] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_share_type]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_share_type] FOREIGN KEY ([share_type_id]) REFERENCES [stock].[share_type] ([id]);


GO
PRINT N'Creating [stock].[fk_deal_request_currency]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CONSTRAINT [fk_deal_request_currency] FOREIGN KEY ([currency_id]) REFERENCES [dic].[currency] ([id]);


GO
PRINT N'Creating unnamed constraint on [stock].[issue]...';


GO
ALTER TABLE [stock].[issue]
    ADD CHECK ([amount_numerator] >= 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue]...';


GO
ALTER TABLE [stock].[issue]
    ADD CHECK ([amount_denominator] > 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue]...';


GO
ALTER TABLE [stock].[issue]
    ADD CHECK ([amount_numerator] >= 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue]...';


GO
ALTER TABLE [stock].[issue]
    ADD CHECK ([amount_denominator] > 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue]...';


GO
ALTER TABLE [stock].[issue]
    ADD CHECK ([ratio] > 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue_request]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CHECK ([amount_numerator] >= 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue_request]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CHECK ([amount_denominator] > 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue_request]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CHECK ([amount_numerator] >= 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue_request]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CHECK ([amount_denominator] > 0);


GO
PRINT N'Creating unnamed constraint on [stock].[issue_request]...';


GO
ALTER TABLE [stock].[issue_request]
    ADD CHECK ([ratio] > 0);


GO
PRINT N'Creating unnamed constraint on [stock].[deal]...';


GO
ALTER TABLE [stock].[deal]
    ADD CHECK ([amount_numerator] >= 0 and [amount_numerator] < [amount_denominator]);


GO
PRINT N'Creating unnamed constraint on [stock].[deal]...';


GO
ALTER TABLE [stock].[deal]
    ADD CHECK ([amount_denominator] > 0);


GO
PRINT N'Creating unnamed constraint on [stock].[deal_request]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CHECK ([amount_numerator] >= 0 and [amount_numerator] < [amount_denominator]);


GO
PRINT N'Creating unnamed constraint on [stock].[deal_request]...';


GO
ALTER TABLE [stock].[deal_request]
    ADD CHECK ([amount_denominator] > 0);


GO
PRINT N'Creating [biz].[company_view]...';


GO
create view [biz].[company_view]
as
	select 
		o.id					as id,
		o.name					as name,
		o.inn					as inn,
		o.kpp					as kpp,
		o.ogrn					as ogrn,
		o.registration_date		as registration_date,
		h.hid					as hid,
		h.period_start			as period_start,
		h.period_end			as period_end,
		h.short_name			as short_name,
		h.full_name				as full_name,
		h.okopf_id				as okopf_id,
		okopf.name				as okopf_name,
		c.name					as country_name,
		-- actual address
		aa.id					as actual_address_id,
		aa.building				as actual_address_building,
		aa.city					as actual_address_city,
		aa.postal_code			as actual_address_postal_code,
		aa.region				as actual_address_region,
		aa.country_id			as actual_address_country_id,
		caa.name				as actual_address_country_name
	from 
		biz.company as o
		inner join biz.company_history	as h
			on (o.id = h.company_id)
		left outer join dic.okopf		as okopf
			on (h.okopf_id = okopf.id)
		left outer join dic.country		as c
			on (o.country_id = c.id)
		left outer join biz.address		as aa
			on (h.actual_address_id = aa.id)
		left outer join dic.country		as caa
			on (aa.country_id = caa.id)
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '55929fb3-3961-4b9b-8144-f173665891bb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('55929fb3-3961-4b9b-8144-f173665891bb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '12b090ea-59b0-44a9-8ee4-8e1f5f474e48')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('12b090ea-59b0-44a9-8ee4-8e1f5f474e48')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e76f3873-db89-4dc8-8e23-5c9eb65c419a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e76f3873-db89-4dc8-8e23-5c9eb65c419a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a0b70de4-51e9-4a83-9310-fbf6dbf1b074')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a0b70de4-51e9-4a83-9310-fbf6dbf1b074')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2e17efde-a200-4a61-a351-dd973283e125')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2e17efde-a200-4a61-a351-dd973283e125')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0c451ea3-4059-4737-8de5-c76102586ab8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0c451ea3-4059-4737-8de5-c76102586ab8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e8afbee2-4b30-49e3-b05c-5930a95dcb57')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e8afbee2-4b30-49e3-b05c-5930a95dcb57')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '980cef8b-5b34-4ff3-8adf-9dc20f259204')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('980cef8b-5b34-4ff3-8adf-9dc20f259204')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bf9ac3da-41f3-4404-a55d-c41698d671bf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bf9ac3da-41f3-4404-a55d-c41698d671bf')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ccffa418-db07-49c9-bbda-4621edcc5686')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ccffa418-db07-49c9-bbda-4621edcc5686')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f008800d-83b2-40bc-94db-0c8e4e4e8d8a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f008800d-83b2-40bc-94db-0c8e4e4e8d8a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '97b44d72-eae8-4af4-82ec-54eea269b8f1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('97b44d72-eae8-4af4-82ec-54eea269b8f1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c8b3028a-3c09-4f4f-9aeb-fc359a8774f7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c8b3028a-3c09-4f4f-9aeb-fc359a8774f7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bc56e792-a942-44a7-bbd1-e025d5f08212')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bc56e792-a942-44a7-bbd1-e025d5f08212')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e4795a3e-ca2d-44ea-9cfa-2a80967ed532')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e4795a3e-ca2d-44ea-9cfa-2a80967ed532')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '03545e53-8a2b-4353-b1b9-01c6799d94e8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('03545e53-8a2b-4353-b1b9-01c6799d94e8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a9fdfcc9-796e-4d40-93ff-40893857b0d6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a9fdfcc9-796e-4d40-93ff-40893857b0d6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cfbe9f29-5bea-4961-a73f-00585c37c331')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cfbe9f29-5bea-4961-a73f-00585c37c331')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e8980379-27b6-4d65-be76-c6ba5e057034')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e8980379-27b6-4d65-be76-c6ba5e057034')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'aa1d2686-c6d8-4bf6-8975-4b1ff7e66638')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('aa1d2686-c6d8-4bf6-8975-4b1ff7e66638')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b5fb7d1f-1123-4dea-8e39-95249730f41d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b5fb7d1f-1123-4dea-8e39-95249730f41d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5c3b707e-2440-4c93-b098-7e7b241a23b9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5c3b707e-2440-4c93-b098-7e7b241a23b9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f35f4b78-f5ff-47f0-962d-bfda9325bc2c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f35f4b78-f5ff-47f0-962d-bfda9325bc2c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '03e97c9e-7ddb-4598-b2d2-b1a5f695297d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('03e97c9e-7ddb-4598-b2d2-b1a5f695297d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a6fa80de-5fe6-474c-8347-39656516e328')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a6fa80de-5fe6-474c-8347-39656516e328')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '770a3a6e-d797-4f8b-8c64-751d9e709a65')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('770a3a6e-d797-4f8b-8c64-751d9e709a65')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '903ece12-0bc9-4587-9b08-3ae1cec00099')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('903ece12-0bc9-4587-9b08-3ae1cec00099')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '926fc0e6-f130-4876-9d9e-7cad0b8e55c1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('926fc0e6-f130-4876-9d9e-7cad0b8e55c1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '359f481e-4e5d-4df2-b5e5-41842f3b74f9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('359f481e-4e5d-4df2-b5e5-41842f3b74f9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5db7ad53-f68b-4a13-baa9-6fdae1db0586')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5db7ad53-f68b-4a13-baa9-6fdae1db0586')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b3f2a15b-9909-4e95-aae9-444edada2e27')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b3f2a15b-9909-4e95-aae9-444edada2e27')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd36fde39-85b1-432d-8fe6-019f8a9a3b06')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d36fde39-85b1-432d-8fe6-019f8a9a3b06')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '579ebb00-1f45-4961-a90d-871a5aec9bcd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('579ebb00-1f45-4961-a90d-871a5aec9bcd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2780bbe4-341a-4659-89b1-c040478a4368')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2780bbe4-341a-4659-89b1-c040478a4368')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cd8da7d2-aeff-4274-bf21-6325449c7be1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cd8da7d2-aeff-4274-bf21-6325449c7be1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cd245e85-655a-46d9-bfb9-a5265783de26')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cd245e85-655a-46d9-bfb9-a5265783de26')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a25b04bc-3a06-4429-90c6-0479c7963dec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a25b04bc-3a06-4429-90c6-0479c7963dec')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f8cea0f4-ccbf-4dde-a285-4c223b3c0ac9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f8cea0f4-ccbf-4dde-a285-4c223b3c0ac9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fa29a7a9-cb13-405f-8ddf-28877e0db786')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fa29a7a9-cb13-405f-8ddf-28877e0db786')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5cad938f-789d-4541-8ac3-a3e7d4c66a5c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5cad938f-789d-4541-8ac3-a3e7d4c66a5c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '530c4268-a491-4e90-ab4e-9500e040da70')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('530c4268-a491-4e90-ab4e-9500e040da70')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '480f2f16-7500-44a0-9751-74d76d827f95')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('480f2f16-7500-44a0-9751-74d76d827f95')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '94acaafd-85cc-4b31-9988-3a5f004a00f7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('94acaafd-85cc-4b31-9988-3a5f004a00f7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a0f6537a-7fe9-4a83-908a-68a743271425')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a0f6537a-7fe9-4a83-908a-68a743271425')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9ab3a1ed-a3cf-4a22-be41-11dba577e554')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9ab3a1ed-a3cf-4a22-be41-11dba577e554')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2e6c5e82-e209-4ca6-abdf-75d661aebbfd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2e6c5e82-e209-4ca6-abdf-75d661aebbfd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '231959f6-0841-41b2-8ad0-8c2d864df337')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('231959f6-0841-41b2-8ad0-8c2d864df337')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4c881a28-2723-4841-8eed-fc33e33b0de7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4c881a28-2723-4841-8eed-fc33e33b0de7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6b50570a-608a-40fb-855a-8891b6a6a625')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6b50570a-608a-40fb-855a-8891b6a6a625')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cfdb8213-9469-485b-9729-25cd3d4f0adf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cfdb8213-9469-485b-9729-25cd3d4f0adf')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '08081c94-d14a-4ab3-a644-bd490678f3cb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('08081c94-d14a-4ab3-a644-bd490678f3cb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8279e179-09a1-4d00-a689-6eb71350ac11')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8279e179-09a1-4d00-a689-6eb71350ac11')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1350bc6f-e7a8-4fb7-859e-7e365b5a4123')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1350bc6f-e7a8-4fb7-859e-7e365b5a4123')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '55bcf67f-8020-4cae-9dc4-79b1de7e5a5c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('55bcf67f-8020-4cae-9dc4-79b1de7e5a5c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8b6e5f96-5565-4a7b-9d62-17aa48961821')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8b6e5f96-5565-4a7b-9d62-17aa48961821')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '93e048e3-c609-49b9-ba62-50f19123565c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('93e048e3-c609-49b9-ba62-50f19123565c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'db1d95cb-6c05-490a-b0d3-a87e7467fd40')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('db1d95cb-6c05-490a-b0d3-a87e7467fd40')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7b7507cc-ea10-4bb4-a515-20b698c1a1da')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7b7507cc-ea10-4bb4-a515-20b698c1a1da')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '40891278-42d2-4191-a147-6add2e55dfb1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('40891278-42d2-4191-a147-6add2e55dfb1')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
print '$$$-postdeployment-start-do-not-change-this-line-$$$'


print '$$$-postdeployment-end-do-not-change-this-line-$$$'
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
