/*
Deployment script for SAMISDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SAMISDB"
:setvar DefaultFilePrefix "SAMISDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SAM\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SAM\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Cyrillic_General_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [identity_server]...';


GO
CREATE SCHEMA [identity_server]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [metadata]...';


GO
CREATE SCHEMA [metadata]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [presentation]...';


GO
CREATE SCHEMA [presentation]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [identity_server].[user_account]...';


GO
CREATE TABLE [identity_server].[user_account] (
    [id]                     INT            IDENTITY (1, 1) NOT NULL,
    [state]                  SMALLINT       NOT NULL,
    [client_id]              INT            NOT NULL,
    [name]                   NVARCHAR (256) NOT NULL,
    [normalized_name]        NVARCHAR (256) NOT NULL,
    [email]                  NVARCHAR (256) NULL,
    [normalized_email]       NVARCHAR (256) NULL,
    [email_confirmed]        BIT            NOT NULL,
    [password_hash]          VARCHAR (256)  NULL,
    [security_stamp]         VARCHAR (256)  NULL,
    [concurency_stamp]       VARCHAR (256)  NOT NULL,
    [phone_number]           VARCHAR (256)  NULL,
    [phone_number_confirmed] BIT            NOT NULL,
    [two_factor_enabled]     BIT            NOT NULL,
    [lockout_end]            DATETIME2 (7)  NULL,
    [lockout_enabled]        BIT            NOT NULL,
    [access_failed_count]    INT            NOT NULL,
    [modified_date]          DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_user_account] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_user_account_name] UNIQUE NONCLUSTERED ([client_id] ASC, [name] ASC)
);


GO
PRINT N'Creating [identity_server].[user_access_right]...';


GO
CREATE TABLE [identity_server].[user_access_right] (
    [user_id]         INT NOT NULL,
    [access_right_id] INT NOT NULL,
    CONSTRAINT [pk_user_access_right] PRIMARY KEY CLUSTERED ([user_id] ASC, [access_right_id] ASC)
);


GO
PRINT N'Creating [identity_server].[role_access_right]...';


GO
CREATE TABLE [identity_server].[role_access_right] (
    [role_id]         INT NOT NULL,
    [access_right_id] INT NOT NULL,
    CONSTRAINT [pk_role_access_right] PRIMARY KEY CLUSTERED ([role_id] ASC, [access_right_id] ASC)
);


GO
PRINT N'Creating [identity_server].[role]...';


GO
CREATE TABLE [identity_server].[role] (
    [id]        INT            IDENTITY (1, 1) NOT NULL,
    [state]     SMALLINT       NOT NULL,
    [client_id] INT            NOT NULL,
    [code]      VARCHAR (128)  NOT NULL,
    [cn]        NVARCHAR (128) NULL,
    [name]      NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_role] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_role_code] UNIQUE NONCLUSTERED ([client_id] ASC, [code] ASC)
);


GO
PRINT N'Creating [identity_server].[provider]...';


GO
CREATE TABLE [identity_server].[provider] (
    [id]            INT            NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          VARCHAR (128)  NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [provider_type] NVARCHAR (512) NOT NULL,
    [parameters]    NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_provider] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_provider_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [identity_server].[client]...';


GO
CREATE TABLE [identity_server].[client] (
    [id]              INT            IDENTITY (1, 1) NOT NULL,
    [state]           SMALLINT       NOT NULL,
    [provider_id]     INT            NOT NULL,
    [code]            VARCHAR (128)  NOT NULL,
    [name]            NVARCHAR (256) NOT NULL,
    [grant_types]     VARCHAR (256)  NOT NULL,
    [client_uri]      NVARCHAR (512) NULL,
    [redirect_uri]    NVARCHAR (512) NULL,
    [postlogout_uri]  NVARCHAR (512) NULL,
    [secret]          VARCHAR (256)  NULL,
    [require_consent] BIT            NOT NULL,
    [allowed_scopes]  VARCHAR (512)  NULL,
    [user_id]         INT            NULL,
    [logo]            VARCHAR (MAX)  NULL,
    [comments]        NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_client] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [identity_server].[api_resource_claim]...';


GO
CREATE TABLE [identity_server].[api_resource_claim] (
    [api_resource_code] VARCHAR (128)  NOT NULL,
    [claim]             VARCHAR (128)  NOT NULL,
    [value]             NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [pk_api_resource_claim] PRIMARY KEY CLUSTERED ([api_resource_code] ASC, [claim] ASC)
);


GO
PRINT N'Creating [identity_server].[api_resource]...';


GO
CREATE TABLE [identity_server].[api_resource] (
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_api_resource] PRIMARY KEY CLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [identity_server].[access_right]...';


GO
CREATE TABLE [identity_server].[access_right] (
    [id]        INT            IDENTITY (1, 1) NOT NULL,
    [state]     SMALLINT       NOT NULL,
    [client_id] INT            NOT NULL,
    [code]      VARCHAR (128)  NOT NULL,
    [name]      NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_access_right] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_access_right_code] UNIQUE NONCLUSTERED ([client_id] ASC, [code] ASC)
);


GO
PRINT N'Creating [identity_server].[user_role]...';


GO
CREATE TABLE [identity_server].[user_role] (
    [user_id] INT NOT NULL,
    [role_id] INT NOT NULL,
    CONSTRAINT [pk_user_role] PRIMARY KEY CLUSTERED ([user_id] ASC, [role_id] ASC)
);


GO
PRINT N'Creating [identity_server].[user_profile]...';


GO
CREATE TABLE [identity_server].[user_profile] (
    [user_id] INT           NOT NULL,
    [claim]   VARCHAR (128) NOT NULL,
    [value]   VARCHAR (MAX) NOT NULL,
    CONSTRAINT [pk_user_profile] PRIMARY KEY CLUSTERED ([user_id] ASC, [claim] ASC)
);


GO
PRINT N'Creating [metadata].[data_operation_type]...';


GO
CREATE TABLE [metadata].[data_operation_type] (
    [id]   INT            NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_data_operation_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[change_type]...';


GO
CREATE TABLE [metadata].[change_type] (
    [id]   CHAR (1)       NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_change_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [metadata].[request_type_global]...';


GO
CREATE TABLE [metadata].[request_type_global] (
    [request_type_id] INT            NOT NULL,
    [lang]            CHAR (2)       NOT NULL,
    [name]            NVARCHAR (256) NULL,
    CONSTRAINT [pk_request_type_global] PRIMARY KEY CLUSTERED ([request_type_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [metadata].[document_type_global]...';


GO
CREATE TABLE [metadata].[document_type_global] (
    [document_type_id] INT            NOT NULL,
    [lang]             CHAR (2)       NOT NULL,
    [name]             NVARCHAR (256) NULL,
    [title]            NVARCHAR (512) NULL,
    CONSTRAINT [pk_document_type_global] PRIMARY KEY CLUSTERED ([document_type_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [metadata].[document_state_global]...';


GO
CREATE TABLE [metadata].[document_state_global] (
    [document_state_id] INT            NOT NULL,
    [lang]              CHAR (2)       NOT NULL,
    [name]              NVARCHAR (256) NULL,
    [comments]          NVARCHAR (MAX) NULL,
    CONSTRAINT [pk_document_state_global] PRIMARY KEY CLUSTERED ([document_state_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [metadata].[document_state]...';


GO
CREATE TABLE [metadata].[document_state] (
    [id]               INT            IDENTITY (1, 1) NOT NULL,
    [document_type_id] INT            NOT NULL,
    [value]            SMALLINT       NOT NULL,
    [code]             VARCHAR (128)  NOT NULL,
    [name]             NVARCHAR (256) NOT NULL,
    [comments]         NVARCHAR (MAX) NULL,
    [modified_by]      INT            NOT NULL,
    [modified_date]    DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_document_state] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_document_state_value] UNIQUE NONCLUSTERED ([document_type_id] ASC, [value] ASC)
);


GO
PRINT N'Creating [metadata].[request_type]...';


GO
CREATE TABLE [metadata].[request_type] (
    [id]                     INT            IDENTITY (1, 1) NOT NULL,
    [state]                  SMALLINT       NOT NULL,
    [code]                   VARCHAR (128)  NOT NULL,
    [name]                   NVARCHAR (256) NOT NULL,
    [data_operation_type_id] INT            NOT NULL,
    [ordinal]                INT            NOT NULL,
    [visible]                BIT            NOT NULL,
    [document_type_id]       INT            NOT NULL,
    [controller]             VARCHAR (128)  NOT NULL,
    [action]                 VARCHAR (128)  NOT NULL,
    [parameters]             VARCHAR (128)  NULL,
    [access_right_code]      VARCHAR (128)  NOT NULL,
    [edit_request_type_code] VARCHAR (128)  NULL,
    [view_request_type_code] VARCHAR (128)  NULL,
    [modified_by]            INT            NOT NULL,
    [modified_date]          DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_request_type] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_request_type_action] UNIQUE NONCLUSTERED ([controller] ASC, [action] ASC),
    CONSTRAINT [ak_request_type_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [metadata].[document_type]...';


GO
CREATE TABLE [metadata].[document_type] (
    [id]                 INT             IDENTITY (1, 1) NOT NULL,
    [state]              SMALLINT        NOT NULL,
    [code]               VARCHAR (128)   NOT NULL,
    [name]               NVARCHAR (256)  NOT NULL,
    [title]              NVARCHAR (512)  NULL,
    [schema_name]        NVARCHAR (64)   NULL,
    [table_name]         NVARCHAR (64)   NULL,
    [entity_type]        NVARCHAR (1024) NULL,
    [history_type]       NVARCHAR (1024) NULL,
    [data_adapter]       NVARCHAR (1024) NULL,
    [image_name]         VARCHAR (128)   NOT NULL,
    [supports_history]   BIT             NOT NULL,
    [supports_hierarchy] BIT             NOT NULL,
    [modified_by]        INT             NOT NULL,
    [modified_date]      DATETIME2 (7)   NOT NULL,
    CONSTRAINT [pk_document_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [presentation].[view_type]...';


GO
CREATE TABLE [presentation].[view_type] (
    [id]   INT            NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_view_type] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_view_type_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [presentation].[node_type]...';


GO
CREATE TABLE [presentation].[node_type] (
    [id]   INT            NOT NULL,
    [code] VARCHAR (128)  NOT NULL,
    [name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [pk_node_type] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [presentation].[node_global]...';


GO
CREATE TABLE [presentation].[node_global] (
    [node_id] INT            NOT NULL,
    [lang]    CHAR (2)       NOT NULL,
    [name]    NVARCHAR (256) NULL,
    [title]   NVARCHAR (256) NULL,
    CONSTRAINT [pk_node_global] PRIMARY KEY CLUSTERED ([node_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [presentation].[node]...';


GO
CREATE TABLE [presentation].[node] (
    [id]                INT            IDENTITY (1, 1) NOT NULL,
    [state]             SMALLINT       NOT NULL,
    [code]              VARCHAR (128)  NOT NULL,
    [parent_code]       VARCHAR (128)  NULL,
    [name]              NVARCHAR (256) NOT NULL,
    [title]             NVARCHAR (256) NULL,
    [node_type_id]      INT            NOT NULL,
    [ordinal]           INT            NOT NULL,
    [parameters]        NVARCHAR (MAX) NULL,
    [image]             NVARCHAR (MAX) NULL,
    [image_name]        VARCHAR (128)  NULL,
    [request_type_code] VARCHAR (128)  NULL,
    [modified_by]       INT            NOT NULL,
    [modified_date]     DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_node] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_node_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [presentation].[command_global]...';


GO
CREATE TABLE [presentation].[command_global] (
    [command_id] INT            NOT NULL,
    [lang]       CHAR (2)       NOT NULL,
    [name]       NVARCHAR (256) NULL,
    [title]      NVARCHAR (256) NULL,
    CONSTRAINT [pk_command_global] PRIMARY KEY CLUSTERED ([command_id] ASC, [lang] ASC)
);


GO
PRINT N'Creating [presentation].[command]...';


GO
CREATE TABLE [presentation].[command] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [state]         SMALLINT       NOT NULL,
    [code]          VARCHAR (128)  NOT NULL,
    [name]          NVARCHAR (256) NOT NULL,
    [title]         NVARCHAR (256) NULL,
    [image_name]    VARCHAR (128)  NOT NULL,
    [modified_by]   INT            NOT NULL,
    [modified_date] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [pk_command] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [ak_command_code] UNIQUE NONCLUSTERED ([code] ASC)
);


GO
PRINT N'Creating [identity_server].[fk_user_account_client]...';


GO
ALTER TABLE [identity_server].[user_account]
    ADD CONSTRAINT [fk_user_account_client] FOREIGN KEY ([client_id]) REFERENCES [identity_server].[client] ([id]);


GO
PRINT N'Creating [identity_server].[fk_user_access_right_user_account]...';


GO
ALTER TABLE [identity_server].[user_access_right]
    ADD CONSTRAINT [fk_user_access_right_user_account] FOREIGN KEY ([user_id]) REFERENCES [identity_server].[user_account] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [identity_server].[fk_user_access_right_access_right]...';


GO
ALTER TABLE [identity_server].[user_access_right]
    ADD CONSTRAINT [fk_user_access_right_access_right] FOREIGN KEY ([access_right_id]) REFERENCES [identity_server].[access_right] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [identity_server].[fk_role_access_right_role]...';


GO
ALTER TABLE [identity_server].[role_access_right]
    ADD CONSTRAINT [fk_role_access_right_role] FOREIGN KEY ([role_id]) REFERENCES [identity_server].[role] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [identity_server].[fk_role_access_right_access_right]...';


GO
ALTER TABLE [identity_server].[role_access_right]
    ADD CONSTRAINT [fk_role_access_right_access_right] FOREIGN KEY ([access_right_id]) REFERENCES [identity_server].[access_right] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [identity_server].[fk_role_client]...';


GO
ALTER TABLE [identity_server].[role]
    ADD CONSTRAINT [fk_role_client] FOREIGN KEY ([client_id]) REFERENCES [identity_server].[client] ([id]);


GO
PRINT N'Creating [identity_server].[fk_client_provider]...';


GO
ALTER TABLE [identity_server].[client]
    ADD CONSTRAINT [fk_client_provider] FOREIGN KEY ([provider_id]) REFERENCES [identity_server].[provider] ([id]);


GO
PRINT N'Creating [identity_server].[fk_api_resource_claim_api_resource]...';


GO
ALTER TABLE [identity_server].[api_resource_claim]
    ADD CONSTRAINT [fk_api_resource_claim_api_resource] FOREIGN KEY ([api_resource_code]) REFERENCES [identity_server].[api_resource] ([code]) ON DELETE CASCADE;


GO
PRINT N'Creating [identity_server].[fk_access_right_client]...';


GO
ALTER TABLE [identity_server].[access_right]
    ADD CONSTRAINT [fk_access_right_client] FOREIGN KEY ([client_id]) REFERENCES [identity_server].[client] ([id]);


GO
PRINT N'Creating [identity_server].[fk_user_role_user_account]...';


GO
ALTER TABLE [identity_server].[user_role]
    ADD CONSTRAINT [fk_user_role_user_account] FOREIGN KEY ([user_id]) REFERENCES [identity_server].[user_account] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [identity_server].[fk_user_role_role]...';


GO
ALTER TABLE [identity_server].[user_role]
    ADD CONSTRAINT [fk_user_role_role] FOREIGN KEY ([role_id]) REFERENCES [identity_server].[role] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [identity_server].[fk_user_profile_user_account]...';


GO
ALTER TABLE [identity_server].[user_profile]
    ADD CONSTRAINT [fk_user_profile_user_account] FOREIGN KEY ([user_id]) REFERENCES [identity_server].[user_account] ([id]) ON DELETE CASCADE;


GO
PRINT N'Creating [metadata].[fk_request_type_global_request_type]...';


GO
ALTER TABLE [metadata].[request_type_global]
    ADD CONSTRAINT [fk_request_type_global_request_type] FOREIGN KEY ([request_type_id]) REFERENCES [metadata].[request_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_document_type_global_document_type]...';


GO
ALTER TABLE [metadata].[document_type_global]
    ADD CONSTRAINT [fk_document_type_global_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_document_state_global_document_state]...';


GO
ALTER TABLE [metadata].[document_state_global]
    ADD CONSTRAINT [fk_document_state_global_document_state] FOREIGN KEY ([document_state_id]) REFERENCES [metadata].[document_state] ([id]);


GO
PRINT N'Creating [metadata].[fk_document_state_document_type]...';


GO
ALTER TABLE [metadata].[document_state]
    ADD CONSTRAINT [fk_document_state_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_type_data_operation_type]...';


GO
ALTER TABLE [metadata].[request_type]
    ADD CONSTRAINT [fk_request_type_data_operation_type] FOREIGN KEY ([data_operation_type_id]) REFERENCES [metadata].[data_operation_type] ([id]);


GO
PRINT N'Creating [metadata].[fk_request_type_document_type]...';


GO
ALTER TABLE [metadata].[request_type]
    ADD CONSTRAINT [fk_request_type_document_type] FOREIGN KEY ([document_type_id]) REFERENCES [metadata].[document_type] ([id]);


GO
PRINT N'Creating [presentation].[fk_node_global_node]...';


GO
ALTER TABLE [presentation].[node_global]
    ADD CONSTRAINT [fk_node_global_node] FOREIGN KEY ([node_id]) REFERENCES [presentation].[node] ([id]);


GO
PRINT N'Creating [presentation].[fk_node_node_type]...';


GO
ALTER TABLE [presentation].[node]
    ADD CONSTRAINT [fk_node_node_type] FOREIGN KEY ([node_type_id]) REFERENCES [presentation].[node_type] ([id]);


GO
PRINT N'Creating [presentation].[fk_node_request_type]...';


GO
ALTER TABLE [presentation].[node]
    ADD CONSTRAINT [fk_node_request_type] FOREIGN KEY ([request_type_code]) REFERENCES [metadata].[request_type] ([code]);


GO
PRINT N'Creating [presentation].[fk_command_global_command]...';


GO
ALTER TABLE [presentation].[command_global]
    ADD CONSTRAINT [fk_command_global_command] FOREIGN KEY ([command_id]) REFERENCES [presentation].[command] ([id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '738dc1d3-4111-4d7e-83b1-0dd41b32fe35')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('738dc1d3-4111-4d7e-83b1-0dd41b32fe35')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
